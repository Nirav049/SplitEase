{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from \"../utils\";\nimport { withClerk } from \"./withClerk\";\nconst SignOutButton = withClerk(_ref => {\n  let {\n    clerk,\n    children,\n    ...props\n  } = _ref;\n  const {\n    signOutCallback,\n    signOutOptions,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign out\");\n  const child = assertSingleChild(children)(\"SignOutButton\");\n  const clickHandler = () => {\n    return clerk.signOut(signOutCallback, signOutOptions);\n  };\n  const wrappedChildClickHandler = async e => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React.cloneElement(child, childProps);\n}, \"SignOutButton\");\nexport { SignOutButton };","map":{"version":3,"mappings":";AACA,OAAOA,WAAW;AAGlB,SAASC,mBAAmBC,2BAA2BC,mBAAmB;AAC1E,SAASC,iBAAiB;AAQnB,MAAMC,gBAAgBD,UAC3BE,QAA+F;EAAA,IAA9F;IAAEC;IAAOC;IAAU,GAAGC;EAAM;EAC3B,MAAM;IAAEC;IAAiBC;IAAgB,GAAGC;EAAK,IAAIH;EAErDD,WAAWN,0BAA0BM,UAAU,UAAU;EACzD,MAAMK,QAAQZ,kBAAkBO,QAAQ,EAAE,eAAe;EAEzD,MAAMM,eAAeA,MAAM;IACzB,OAAOP,MAAMQ,QAAQL,iBAAiBC,cAAc;EACtD;EAEA,MAAMK,2BAAoD,MAAMC,KAAK;IACnE,MAAMd,YAAaU,MAAcJ,MAAMS,OAAO,EAAED,CAAC;IACjD,OAAOH,aAAa;EACtB;EAEA,MAAMK,aAAa;IAAE,GAAGP;IAAMM,SAASF;EAAyB;EAChE,OAAOhB,MAAMoB,aAAaP,OAAsCM,UAAU;AAC5E,GACA,eACF","names":["React","assertSingleChild","normalizeWithDefaultValue","safeExecute","withClerk","SignOutButton","_ref","clerk","children","props","signOutCallback","signOutOptions","rest","child","clickHandler","signOut","wrappedChildClickHandler","e","onClick","childProps","cloneElement"],"sources":["D:\\split project\\SplitEase\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignOutButton.tsx"],"sourcesContent":["import type { SignOutCallback, SignOutOptions } from '@clerk/types';\nimport React from 'react';\n\nimport type { WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport type SignOutButtonProps = {\n  signOutCallback?: SignOutCallback;\n  signOutOptions?: SignOutOptions;\n  children?: React.ReactNode;\n};\n\nexport const SignOutButton = withClerk(\n  ({ clerk, children, ...props }: React.PropsWithChildren<WithClerkProp<SignOutButtonProps>>) => {\n    const { signOutCallback, signOutOptions, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign out');\n    const child = assertSingleChild(children)('SignOutButton');\n\n    const clickHandler = () => {\n      return clerk.signOut(signOutCallback, signOutOptions);\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  'SignOutButton',\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}