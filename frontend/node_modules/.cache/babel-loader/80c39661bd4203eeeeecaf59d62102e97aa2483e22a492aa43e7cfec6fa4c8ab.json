{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { useUserContext } from \"../contexts/UserContext\";\nimport { hocChildrenNotAFunctionError } from \"../errors\";\nconst withUser = (Component, displayName) => {\n  displayName = displayName || Component.displayName || Component.name || \"Component\";\n  Component.displayName = displayName;\n  const HOC = props => {\n    const user = useUserContext();\n    if (!user) {\n      return null;\n    }\n    return /* @__PURE__ */React.createElement(Component, {\n      ...props,\n      user\n    });\n  };\n  HOC.displayName = `withUser(${displayName})`;\n  return HOC;\n};\nconst WithUser = _ref => {\n  let {\n    children\n  } = _ref;\n  const user = useUserContext();\n  if (typeof children !== \"function\") {\n    throw new Error(hocChildrenNotAFunctionError);\n  }\n  if (!user) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(user));\n};\nexport { WithUser, withUser };","map":{"version":3,"mappings":";AACA,OAAOA,WAAW;AAElB,SAASC,sBAAsB;AAC/B,SAASC,oCAAoC;AAEtC,MAAMC,WAAWA,CAAmCC,WAAmCC,gBAAyB;EACrHA,cAAcA,eAAeD,UAAUC,eAAeD,UAAUE,QAAQ;EACxEF,UAAUC,cAAcA;EACxB,MAAME,MAAkCC,SAA2B;IACjE,MAAMC,OAAOR,eAAe;IAE5B,IAAI,CAACQ,MAAM;MACT,OAAO;IACT;IAEA,OACE,mCAACL;MACE,GAAII;MACLC;IAAA,CACF;EAEJ;EAEAF,IAAIF,cAAc,YAAYA,WAAW;EACzC,OAAOE;AACT;AAEO,MAAMG,WAERC,QAAkB;EAAA,IAAjB;IAAEC;EAAS;EACf,MAAMH,OAAOR,eAAe;EAE5B,IAAI,OAAOW,aAAa,YAAY;IAClC,MAAM,IAAIC,MAAMX,4BAA4B;EAC9C;EAEA,IAAI,CAACO,MAAM;IACT,OAAO;EACT;EAEA,OAAO,yDAAGG,SAASH,IAAI,CAAE;AAC3B","names":["React","useUserContext","hocChildrenNotAFunctionError","withUser","Component","displayName","name","HOC","props","user","WithUser","_ref","children","Error"],"sources":["D:\\split project\\SplitEase\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\withUser.tsx"],"sourcesContent":["import type { UserResource } from '@clerk/types';\nimport React from 'react';\n\nimport { useUserContext } from '../contexts/UserContext';\nimport { hocChildrenNotAFunctionError } from '../errors';\n\nexport const withUser = <P extends { user: UserResource }>(Component: React.ComponentType<P>, displayName?: string) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC: React.FC<Omit<P, 'user'>> = (props: Omit<P, 'user'>) => {\n    const user = useUserContext();\n\n    if (!user) {\n      return null;\n    }\n\n    return (\n      <Component\n        {...(props as P)}\n        user={user}\n      />\n    );\n  };\n\n  HOC.displayName = `withUser(${displayName})`;\n  return HOC;\n};\n\nexport const WithUser: React.FC<{\n  children: (user: UserResource) => React.ReactNode;\n}> = ({ children }) => {\n  const user = useUserContext();\n\n  if (typeof children !== 'function') {\n    throw new Error(hocChildrenNotAFunctionError);\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return <>{children(user)}</>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}