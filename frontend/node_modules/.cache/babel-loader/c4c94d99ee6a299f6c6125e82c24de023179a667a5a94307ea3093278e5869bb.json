{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { multipleChildrenInButtonComponent } from \"../errors\";\nvar assertSingleChild = function assertSingleChild(children) {\n  return function (name) {\n    try {\n      return React.Children.only(children);\n    } catch (e) {\n      throw new Error(multipleChildrenInButtonComponent(name));\n    }\n  };\n};\nvar normalizeWithDefaultValue = function normalizeWithDefaultValue(children, defaultText) {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === \"string\") {\n    children = /* @__PURE__ */React.createElement(\"button\", null, children);\n  }\n  return children;\n};\nvar safeExecute = function safeExecute(cb) {\n  return function () {\n    if (cb && typeof cb === \"function\") {\n      return cb.apply(void 0, arguments);\n    }\n  };\n};\nexport { assertSingleChild, normalizeWithDefaultValue, safeExecute };","map":{"version":3,"mappings":";AAAA,OAAOA,WAAW;AAElB,SAASC,yCAAyC;AAE3C,IAAMC,oBACX,SADWA,kBACVC;EAAA,OACD,UAACC,MAAyF;IACxF,IAAI;MACF,OAAOJ,MAAMK,SAASC,KAAKH,QAAQ;IACrC,SAASI,GAAG;MACV,MAAM,IAAIC,MAAMP,kCAAkCG,IAAI,CAAC;IACzD;EACF;AAAA;AAEK,IAAMK,4BAA4B,SAA5BA,0BAA6BN,UAAuCO,aAAwB;EACvG,IAAI,CAACP,UAAU;IACbA,WAAWO;EACb;EACA,IAAI,OAAOP,aAAa,UAAU;IAChCA,WAAW,mCAAC,gBAAQA,QAAS;EAC/B;EACA,OAAOA;AACT;AAEO,IAAMQ,cACX,SADWA,YACVC;EAAA,OACD,YAAkB;IAChB,IAAIA,MAAM,OAAOA,OAAO,YAAY;MAClC,OAAOA,0BAAU;IACnB;EACF;AAAA","names":["React","multipleChildrenInButtonComponent","assertSingleChild","children","name","Children","only","e","Error","normalizeWithDefaultValue","defaultText","safeExecute","cb"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\utils\\childrenUtils.tsx"],"sourcesContent":["import React from 'react';\n\nimport { multipleChildrenInButtonComponent } from '../errors';\n\nexport const assertSingleChild =\n  (children: React.ReactNode) =>\n  (name: 'SignInButton' | 'SignUpButton' | 'SignOutButton' | 'SignInWithMetamaskButton') => {\n    try {\n      return React.Children.only(children);\n    } catch (e) {\n      throw new Error(multipleChildrenInButtonComponent(name));\n    }\n  };\n\nexport const normalizeWithDefaultValue = (children: React.ReactNode | undefined, defaultText: string) => {\n  if (!children) {\n    children = defaultText;\n  }\n  if (typeof children === 'string') {\n    children = <button>{children}</button>;\n  }\n  return children;\n};\n\nexport const safeExecute =\n  (cb: unknown) =>\n  (...args: any) => {\n    if (cb && typeof cb === 'function') {\n      return cb(...args);\n    }\n  };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}