{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from \"../utils\";\nimport { withClerk } from \"./withClerk\";\nconst SignInWithMetamaskButton = withClerk(_ref => {\n  let {\n    clerk,\n    children,\n    ...props\n  } = _ref;\n  const {\n    redirectUrl,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in with Metamask\");\n  const child = assertSingleChild(children)(\"SignInWithMetamaskButton\");\n  const clickHandler = async () => {\n    async function authenticate() {\n      await clerk.authenticateWithMetamask({\n        redirectUrl\n      });\n    }\n    void authenticate();\n  };\n  const wrappedChildClickHandler = async e => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React.cloneElement(child, childProps);\n}, \"SignInWithMetamask\");\nexport { SignInWithMetamaskButton };","map":{"version":3,"mappings":";AAAA,OAAOA,WAAW;AAGlB,SAASC,mBAAmBC,2BAA2BC,mBAAmB;AAC1E,SAASC,iBAAiB;AAEnB,MAAMC,2BAA2BD,UACtCE,QAAiF;EAAA,IAAhF;IAAEC;IAAOC;IAAU,GAAGC;EAAM;EAC3B,MAAM;IAAEC;IAAa,GAAGC;EAAK,IAAIF;EAEjCD,WAAWN,0BAA0BM,UAAU,uBAAuB;EACtE,MAAMI,QAAQX,kBAAkBO,QAAQ,EAAE,0BAA0B;EAIpE,MAAMK,eAAe,YAAY;IAC/B,eAAeC,eAAe;MAC5B,MAAMP,MAAMQ,yBAAyB;QAAEL;MAAY,CAAC;IACtD;IACA,KAAKI,aAAa;EACpB;EAEA,MAAME,2BAAoD,MAAMC,KAAK;IACnE,MAAMd,YAAaS,MAAcH,MAAMS,OAAO,EAAED,CAAC;IACjD,OAAOJ,aAAa;EACtB;EAEA,MAAMM,aAAa;IAAE,GAAGR;IAAMO,SAASF;EAAyB;EAChE,OAAOhB,MAAMoB,aAAaR,OAAsCO,UAAU;AAC5E,GACA,oBACF","names":["React","assertSingleChild","normalizeWithDefaultValue","safeExecute","withClerk","SignInWithMetamaskButton","_ref","clerk","children","props","redirectUrl","rest","child","clickHandler","authenticate","authenticateWithMetamask","wrappedChildClickHandler","e","onClick","childProps","cloneElement"],"sources":["D:\\split project\\SplitEase\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignInWithMetamaskButton.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { SignInWithMetamaskButtonProps, WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInWithMetamaskButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<SignInWithMetamaskButtonProps>) => {\n    const { redirectUrl, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign in with Metamask');\n    const child = assertSingleChild(children)('SignInWithMetamaskButton');\n\n    // TODO: Properly fix this code\n    // eslint-disable-next-line @typescript-eslint/require-await\n    const clickHandler = async () => {\n      async function authenticate() {\n        await clerk.authenticateWithMetamask({ redirectUrl });\n      }\n      void authenticate();\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  'SignInWithMetamask',\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}