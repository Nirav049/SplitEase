{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nfunction useEmailLink(resource) {\n  var _React$useMemo = React.useMemo(function () {\n      return resource.createEmailLinkFlow();\n    }, [resource]),\n    startEmailLinkFlow = _React$useMemo.startEmailLinkFlow,\n    cancelEmailLinkFlow = _React$useMemo.cancelEmailLinkFlow;\n  React.useEffect(function () {\n    return cancelEmailLinkFlow;\n  }, []);\n  return {\n    startEmailLinkFlow: startEmailLinkFlow,\n    cancelEmailLinkFlow: cancelEmailLinkFlow\n  };\n}\nexport { useEmailLink };","map":{"version":3,"mappings":";AAQA,OAAOA,WAAW;AAUlB,SAASC,aACPC,UACsF;EACtF,qBAAoDF,MAAMG,QAAQ;MAAA,OAAMD,SAASE,oBAAoB;IAAA,GAAG,CAACF,QAAQ,CAAC;IAA1GG;IAAoBC;EAE5BN,MAAMO,UAAU,YAAM;IACpB,OAAOD;EACT,GAAG,EAAE;EAEL,OAAO;IACLD;IACAC;EACF;AACF","names":["React","useEmailLink","resource","useMemo","createEmailLinkFlow","startEmailLinkFlow","cancelEmailLinkFlow","useEffect"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\hooks\\useEmailLink.ts"],"sourcesContent":["import type {\n  CreateEmailLinkFlowReturn,\n  EmailAddressResource,\n  SignInResource,\n  SignInStartEmailLinkFlowParams,\n  SignUpResource,\n  StartEmailLinkFlowParams,\n} from '@clerk/types';\nimport React from 'react';\n\ntype EmailLinkable = SignUpResource | EmailAddressResource | SignInResource;\ntype UseEmailLinkSignInReturn = CreateEmailLinkFlowReturn<SignInStartEmailLinkFlowParams, SignInResource>;\ntype UseEmailLinkSignUpReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, SignUpResource>;\ntype UseEmailLinkEmailAddressReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, EmailAddressResource>;\n\nfunction useEmailLink(resource: SignInResource): UseEmailLinkSignInReturn;\nfunction useEmailLink(resource: SignUpResource): UseEmailLinkSignUpReturn;\nfunction useEmailLink(resource: EmailAddressResource): UseEmailLinkEmailAddressReturn;\nfunction useEmailLink(\n  resource: EmailLinkable,\n): UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn {\n  const { startEmailLinkFlow, cancelEmailLinkFlow } = React.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n\n  React.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow,\n  } as UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn;\n}\n\nexport { useEmailLink };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}