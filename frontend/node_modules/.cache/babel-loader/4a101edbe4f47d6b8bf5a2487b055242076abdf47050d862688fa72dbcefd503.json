{"ast":null,"code":"import _regeneratorRuntime from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// src/loadScript.ts\nvar NO_DOCUMENT_ERROR = \"loadScript cannot be called when document does not exist\";\nvar NO_SRC_ERROR = \"loadScript cannot be called without a src\";\nfunction loadScript() {\n  return _loadScript.apply(this, arguments);\n}\nfunction _loadScript() {\n  _loadScript = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var src,\n      opts,\n      _ref,\n      async,\n      defer,\n      beforeLoad,\n      crossOrigin,\n      _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          src = _args.length > 0 && _args[0] !== undefined ? _args[0] : \"\";\n          opts = _args.length > 1 ? _args[1] : undefined;\n          _ref = opts || {}, async = _ref.async, defer = _ref.defer, beforeLoad = _ref.beforeLoad, crossOrigin = _ref.crossOrigin;\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            if (!src) {\n              reject(NO_SRC_ERROR);\n            }\n            if (!document || !document.body) {\n              reject(NO_DOCUMENT_ERROR);\n            }\n            var script = document.createElement(\"script\");\n            crossOrigin && script.setAttribute(\"crossorigin\", crossOrigin);\n            script.async = async || false;\n            script.defer = defer || false;\n            script.addEventListener(\"load\", function () {\n              script.remove();\n              resolve(script);\n            });\n            script.addEventListener(\"error\", function () {\n              script.remove();\n              reject();\n            });\n            script.src = src;\n            beforeLoad === null || beforeLoad === void 0 ? void 0 : beforeLoad(script);\n            document.body.appendChild(script);\n          }));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadScript.apply(this, arguments);\n}\nexport { loadScript };","map":{"version":3,"mappings":";;;AAAA,IAAMA,oBAAoB;AAC1B,IAAMC,eAAe;AAAA,SASCC;EAAA;AAAA;AAAA;EAAAC,yEAAtB;IAAA;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;IAAA;MAAA;QAAA;UAAiCC,8DAAM;UAAIP;UAAAC,OACSD,QAAQ,CAAC,GAAnDE,oBAAOC,oBAAOC,8BAAYC;UAAA,iCAC3B,IAAIG,QAAQ,UAACC,SAASC,QAAW;YACtC,IAAI,CAACH,KAAK;cACRG,OAAOb,YAAY;YACrB;YAEA,IAAI,CAACc,YAAY,CAACA,SAASC,MAAM;cAC/BF,OAAOd,iBAAiB;YAC1B;YAEA,IAAMiB,SAASF,SAASG,cAAc,QAAQ;YAE9CT,eAAeQ,OAAOE,aAAa,eAAeV,WAAW;YAC7DQ,OAAOX,QAAQA,SAAS;YACxBW,OAAOV,QAAQA,SAAS;YAExBU,OAAOG,iBAAiB,QAAQ,YAAM;cACpCH,OAAOI,OAAO;cACdR,QAAQI,MAAM;YAChB,CAAC;YAEDA,OAAOG,iBAAiB,SAAS,YAAM;cACrCH,OAAOI,OAAO;cACdP,OAAO;YACT,CAAC;YAEDG,OAAON,MAAMA;YACbH,mEAAaS,MAAM;YACnBF,SAASC,KAAKM,YAAYL,MAAM;UAClC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CACH;EAAA;AAAA","names":["NO_DOCUMENT_ERROR","NO_SRC_ERROR","loadScript","_loadScript","opts","_ref","async","defer","beforeLoad","crossOrigin","_args","src","Promise","resolve","reject","document","body","script","createElement","setAttribute","addEventListener","remove","appendChild"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\shared\\src\\loadScript.ts"],"sourcesContent":["const NO_DOCUMENT_ERROR = 'loadScript cannot be called when document does not exist';\nconst NO_SRC_ERROR = 'loadScript cannot be called without a src';\n\ntype LoadScriptOptions = {\n  async?: boolean;\n  defer?: boolean;\n  crossOrigin?: 'anonymous' | 'use-credentials';\n  beforeLoad?: (script: HTMLScriptElement) => void;\n};\n\nexport async function loadScript(src = '', opts: LoadScriptOptions): Promise<HTMLScriptElement> {\n  const { async, defer, beforeLoad, crossOrigin } = opts || {};\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(NO_SRC_ERROR);\n    }\n\n    if (!document || !document.body) {\n      reject(NO_DOCUMENT_ERROR);\n    }\n\n    const script = document.createElement('script');\n\n    crossOrigin && script.setAttribute('crossorigin', crossOrigin);\n    script.async = async || false;\n    script.defer = defer || false;\n\n    script.addEventListener('load', () => {\n      script.remove();\n      resolve(script);\n    });\n\n    script.addEventListener('error', () => {\n      script.remove();\n      reject();\n    });\n\n    script.src = src;\n    beforeLoad?.(script);\n    document.body.appendChild(script);\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}