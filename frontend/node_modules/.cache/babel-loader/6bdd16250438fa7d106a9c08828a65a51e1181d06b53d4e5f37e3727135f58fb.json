{"ast":null,"code":"import _objectSpread from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectWithoutProperties from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"clerk\", \"children\"],\n  _excluded2 = [\"redirectUrl\"];\nimport \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from \"../utils\";\nimport { withClerk } from \"./withClerk\";\nvar SignInWithMetamaskButton = withClerk(function (_ref) {\n  var clerk = _ref.clerk,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var redirectUrl = props.redirectUrl,\n    rest = _objectWithoutProperties(props, _excluded2);\n  children = normalizeWithDefaultValue(children, \"Sign in with Metamask\");\n  var child = assertSingleChild(children)(\"SignInWithMetamaskButton\");\n  var clickHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var authenticate, _authenticate;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _authenticate = function _authenticate3() {\n              _authenticate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return clerk.authenticateWithMetamask({\n                        redirectUrl: redirectUrl\n                      });\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n              return _authenticate.apply(this, arguments);\n            };\n            authenticate = function _authenticate2() {\n              return _authenticate.apply(this, arguments);\n            };\n            void authenticate();\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    return function clickHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var wrappedChildClickHandler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(e) {\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return safeExecute(child.props.onClick)(e);\n          case 2:\n            return _context3.abrupt(\"return\", clickHandler());\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n    return function wrappedChildClickHandler(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var childProps = _objectSpread(_objectSpread({}, rest), {}, {\n    onClick: wrappedChildClickHandler\n  });\n  return React.cloneElement(child, childProps);\n}, \"SignInWithMetamask\");\nexport { SignInWithMetamaskButton };","map":{"version":3,"mappings":";;;;;;;AAAA,OAAOA,WAAW;AAGlB,SAASC,mBAAmBC,2BAA2BC,mBAAmB;AAC1E,SAASC,iBAAiB;AAEnB,IAAMC,2BAA2BD,UACtC,gBAAiF;EAAA,IAA9EE;IAAOC;IAAaC;EACrB,IAAQC,cAAyBD,MAAzBC;IAAgBC,gCAASF;EAEjCD,WAAWL,0BAA0BK,UAAU,uBAAuB;EACtE,IAAMI,QAAQV,kBAAkBM,QAAQ,EAAE,0BAA0B;EAIpE,IAAMK;IAAA,uEAAe;MAAA,IACJC;MAAA;QAAA;UAAA;YAAAC;cAAAA,2EAAf;gBAAA;kBAAA;oBAAA;sBAAAC;sBAAA,OACQT,MAAMU,yBAAyB;wBAAEP;sBAAY,CAAC;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACtD;cAAA;YAAA;YAFeI;cAAA;YAAA;YAGf,KAAKA,aAAa;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACpB;IAAA,gBALMD;MAAA;IAAA;EAAA,GAKN;EAEA,IAAMK;IAAA,uEAAoD,kBAAMC;MAAA;QAAA;UAAA;YAAAC;YAAA,OACxDhB,YAAaQ,MAAcH,MAAMY,OAAO,EAAEF,CAAC;UAAA;YAAA,kCAC1CN,aAAa;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACtB;IAAA,gBAHMK;MAAA;IAAA;EAAA,GAGN;EAEA,IAAMI,6CAAkBX;IAAMU,SAASH;EAAA,EAAyB;EAChE,OAAOjB,MAAMsB,aAAaX,OAAsCU,UAAU;AAC5E,GACA,oBACF","names":["React","assertSingleChild","normalizeWithDefaultValue","safeExecute","withClerk","SignInWithMetamaskButton","clerk","children","props","redirectUrl","rest","child","clickHandler","authenticate","_authenticate","_context","authenticateWithMetamask","wrappedChildClickHandler","e","_context3","onClick","childProps","cloneElement"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignInWithMetamaskButton.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { SignInWithMetamaskButtonProps, WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInWithMetamaskButton = withClerk(\n  ({ clerk, children, ...props }: WithClerkProp<SignInWithMetamaskButtonProps>) => {\n    const { redirectUrl, ...rest } = props;\n\n    children = normalizeWithDefaultValue(children, 'Sign in with Metamask');\n    const child = assertSingleChild(children)('SignInWithMetamaskButton');\n\n    // TODO: Properly fix this code\n    // eslint-disable-next-line @typescript-eslint/require-await\n    const clickHandler = async () => {\n      async function authenticate() {\n        await clerk.authenticateWithMetamask({ redirectUrl });\n      }\n      void authenticate();\n    };\n\n    const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n      await safeExecute((child as any).props.onClick)(e);\n      return clickHandler();\n    };\n\n    const childProps = { ...rest, onClick: wrappedChildClickHandler };\n    return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n  },\n  'SignInWithMetamask',\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}