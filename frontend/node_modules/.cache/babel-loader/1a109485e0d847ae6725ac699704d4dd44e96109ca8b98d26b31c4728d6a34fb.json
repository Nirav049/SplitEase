{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nvar deriveState = function deriveState(clerkLoaded, state, initialState) {\n  if (!clerkLoaded && initialState) {\n    return deriveFromSsrInitialState(initialState);\n  }\n  return deriveFromClientSideState(state);\n};\nvar deriveFromSsrInitialState = function deriveFromSsrInitialState(initialState) {\n  var userId = initialState.userId;\n  var user = initialState.user;\n  var sessionId = initialState.sessionId;\n  var session = initialState.session;\n  var organization = initialState.organization;\n  var orgId = initialState.orgId;\n  var orgRole = initialState.orgRole;\n  var orgPermissions = initialState.orgPermissions;\n  var orgSlug = initialState.orgSlug;\n  var actor = initialState.actor;\n  return {\n    userId: userId,\n    user: user,\n    sessionId: sessionId,\n    session: session,\n    organization: organization,\n    orgId: orgId,\n    orgRole: orgRole,\n    orgPermissions: orgPermissions,\n    orgSlug: orgSlug,\n    actor: actor,\n    lastOrganizationInvitation: null,\n    lastOrganizationMember: null\n  };\n};\nvar deriveFromClientSideState = function deriveFromClientSideState(state) {\n  var _user$organizationMem;\n  var userId = state.user ? state.user.id : state.user;\n  var user = state.user;\n  var sessionId = state.session ? state.session.id : state.session;\n  var session = state.session;\n  var actor = session === null || session === void 0 ? void 0 : session.actor;\n  var organization = state.organization;\n  var orgId = state.organization ? state.organization.id : state.organization;\n  var orgSlug = organization === null || organization === void 0 ? void 0 : organization.slug;\n  var membership = organization ? user === null || user === void 0 ? void 0 : (_user$organizationMem = user.organizationMemberships) === null || _user$organizationMem === void 0 ? void 0 : _user$organizationMem.find(function (om) {\n    return om.organization.id === orgId;\n  }) : organization;\n  var orgPermissions = membership ? membership.permissions : membership;\n  var orgRole = membership ? membership.role : membership;\n  var lastOrganizationInvitation = state.lastOrganizationInvitation;\n  var lastOrganizationMember = state.lastOrganizationMember;\n  return {\n    userId: userId,\n    user: user,\n    sessionId: sessionId,\n    session: session,\n    organization: organization,\n    orgId: orgId,\n    orgRole: orgRole,\n    orgSlug: orgSlug,\n    orgPermissions: orgPermissions,\n    actor: actor,\n    lastOrganizationInvitation: lastOrganizationInvitation,\n    lastOrganizationMember: lastOrganizationMember\n  };\n};\nexport { deriveState };","map":{"version":3,"mappings":";AAUO,IAAMA,cAAc,SAAdA,YAAeC,aAAsBC,OAAkBC,cAA2C;EAC7G,IAAI,CAACF,eAAeE,cAAc;IAChC,OAAOC,0BAA0BD,YAAY;EAC/C;EACA,OAAOE,0BAA0BH,KAAK;AACxC;AAEA,IAAME,4BAA4B,SAA5BA,0BAA6BD,cAA+B;EAChE,IAAMG,SAASH,aAAaG;EAC5B,IAAMC,OAAOJ,aAAaI;EAC1B,IAAMC,YAAYL,aAAaK;EAC/B,IAAMC,UAAUN,aAAaM;EAC7B,IAAMC,eAAeP,aAAaO;EAClC,IAAMC,QAAQR,aAAaQ;EAC3B,IAAMC,UAAUT,aAAaS;EAC7B,IAAMC,iBAAiBV,aAAaU;EACpC,IAAMC,UAAUX,aAAaW;EAC7B,IAAMC,QAAQZ,aAAaY;EAE3B,OAAO;IACLT;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,4BAA4B;IAC5BC,wBAAwB;EAC1B;AACF;AAEA,IAAMZ,4BAA4B,SAA5BA,0BAA6BH,OAAqB;EAAA;EACtD,IAAMI,SAAoCJ,MAAMK,OAAOL,MAAMK,KAAKW,KAAKhB,MAAMK;EAC7E,IAAMA,OAAOL,MAAMK;EACnB,IAAMC,YAAuCN,MAAMO,UAAUP,MAAMO,QAAQS,KAAKhB,MAAMO;EACtF,IAAMA,UAAUP,MAAMO;EACtB,IAAMM,QAAQN,0DAASM;EACvB,IAAML,eAAeR,MAAMQ;EAC3B,IAAMC,QAAmCT,MAAMQ,eAAeR,MAAMQ,aAAaQ,KAAKhB,MAAMQ;EAC5F,IAAMI,UAAUJ,yEAAcS;EAC9B,IAAMC,aAAaV,eACfH,0EAAMc,iFAANC,sBAA+BC,KAAK;IAAA,OAAMC,GAAGd,aAAaQ,OAAOP,KAAK;EAAA,KACtED;EACJ,IAAMG,iBAAiBO,aAAaA,WAAWK,cAAcL;EAC7D,IAAMR,UAAUQ,aAAaA,WAAWM,OAAON;EAE/C,IAAMJ,6BAA6Bd,MAAMc;EACzC,IAAMC,yBAAyBf,MAAMe;EAErC,OAAO;IACLX;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAE;IACAD;IACAE;IACAC;IACAC;EACF;AACF","names":["deriveState","clerkLoaded","state","initialState","deriveFromSsrInitialState","deriveFromClientSideState","userId","user","sessionId","session","organization","orgId","orgRole","orgPermissions","orgSlug","actor","lastOrganizationInvitation","lastOrganizationMember","id","slug","membership","organizationMemberships","_user$organizationMem","find","om","permissions","role"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\utils\\deriveState.ts"],"sourcesContent":["import type {\n  ActiveSessionResource,\n  InitialState,\n  MembershipRole,\n  OrganizationCustomPermissionKey,\n  OrganizationResource,\n  Resources,\n  UserResource,\n} from '@clerk/types';\n\nexport const deriveState = (clerkLoaded: boolean, state: Resources, initialState: InitialState | undefined) => {\n  if (!clerkLoaded && initialState) {\n    return deriveFromSsrInitialState(initialState);\n  }\n  return deriveFromClientSideState(state);\n};\n\nconst deriveFromSsrInitialState = (initialState: InitialState) => {\n  const userId = initialState.userId;\n  const user = initialState.user as UserResource;\n  const sessionId = initialState.sessionId;\n  const session = initialState.session as ActiveSessionResource;\n  const organization = initialState.organization as OrganizationResource;\n  const orgId = initialState.orgId;\n  const orgRole = initialState.orgRole as MembershipRole;\n  const orgPermissions = initialState.orgPermissions as OrganizationCustomPermissionKey[];\n  const orgSlug = initialState.orgSlug;\n  const actor = initialState.actor;\n\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgPermissions,\n    orgSlug,\n    actor,\n    lastOrganizationInvitation: null,\n    lastOrganizationMember: null,\n  };\n};\n\nconst deriveFromClientSideState = (state: Resources) => {\n  const userId: string | null | undefined = state.user ? state.user.id : state.user;\n  const user = state.user;\n  const sessionId: string | null | undefined = state.session ? state.session.id : state.session;\n  const session = state.session;\n  const actor = session?.actor;\n  const organization = state.organization;\n  const orgId: string | null | undefined = state.organization ? state.organization.id : state.organization;\n  const orgSlug = organization?.slug;\n  const membership = organization\n    ? user?.organizationMemberships?.find(om => om.organization.id === orgId)\n    : organization;\n  const orgPermissions = membership ? membership.permissions : membership;\n  const orgRole = membership ? membership.role : membership;\n\n  const lastOrganizationInvitation = state.lastOrganizationInvitation;\n  const lastOrganizationMember = state.lastOrganizationMember;\n\n  return {\n    userId,\n    user,\n    sessionId,\n    session,\n    organization,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions,\n    actor,\n    lastOrganizationInvitation,\n    lastOrganizationMember,\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}