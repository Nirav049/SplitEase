{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from \"../utils\";\nimport { withClerk } from \"./withClerk\";\nconst SignInButton = withClerk(_ref => {\n  let {\n    clerk,\n    children,\n    ...props\n  } = _ref;\n  const {\n    afterSignInUrl,\n    afterSignUpUrl,\n    redirectUrl,\n    mode,\n    ...rest\n  } = props;\n  children = normalizeWithDefaultValue(children, \"Sign in\");\n  const child = assertSingleChild(children)(\"SignInButton\");\n  const clickHandler = () => {\n    const opts = {\n      afterSignInUrl,\n      afterSignUpUrl,\n      redirectUrl\n    };\n    if (mode === \"modal\") {\n      return clerk.openSignIn(opts);\n    }\n    return clerk.redirectToSignIn(opts);\n  };\n  const wrappedChildClickHandler = async e => {\n    await safeExecute(child.props.onClick)(e);\n    return clickHandler();\n  };\n  const childProps = {\n    ...rest,\n    onClick: wrappedChildClickHandler\n  };\n  return React.cloneElement(child, childProps);\n}, \"SignInButton\");\nexport { SignInButton };","map":{"version":3,"mappings":";AAAA,OAAOA,WAAW;AAGlB,SAASC,mBAAmBC,2BAA2BC,mBAAmB;AAC1E,SAASC,iBAAiB;AAEnB,MAAMC,eAAeD,UAAUE,QAAqE;EAAA,IAApE;IAAEC;IAAOC;IAAU,GAAGC;EAAM;EACjE,MAAM;IAAEC;IAAgBC;IAAgBC;IAAaC;IAAM,GAAGC;EAAK,IAAIL;EAEvED,WAAWN,0BAA0BM,UAAU,SAAS;EACxD,MAAMO,QAAQd,kBAAkBO,QAAQ,EAAE,cAAc;EAExD,MAAMQ,eAAeA,MAAM;IACzB,MAAMC,OAAO;MAAEP;MAAgBC;MAAgBC;IAAY;IAC3D,IAAIC,SAAS,SAAS;MACpB,OAAON,MAAMW,WAAWD,IAAI;IAC9B;IACA,OAAOV,MAAMY,iBAAiBF,IAAI;EACpC;EAEA,MAAMG,2BAAoD,MAAMC,KAAK;IACnE,MAAMlB,YAAaY,MAAcN,MAAMa,OAAO,EAAED,CAAC;IACjD,OAAOL,aAAa;EACtB;EAEA,MAAMO,aAAa;IAAE,GAAGT;IAAMQ,SAASF;EAAyB;EAChE,OAAOpB,MAAMwB,aAAaT,OAAsCQ,UAAU;AAC5E,GAAG,cAAc","names":["React","assertSingleChild","normalizeWithDefaultValue","safeExecute","withClerk","SignInButton","_ref","clerk","children","props","afterSignInUrl","afterSignUpUrl","redirectUrl","mode","rest","child","clickHandler","opts","openSignIn","redirectToSignIn","wrappedChildClickHandler","e","onClick","childProps","cloneElement"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\SignInButton.tsx"],"sourcesContent":["import React from 'react';\n\nimport type { SignInButtonProps, WithClerkProp } from '../types';\nimport { assertSingleChild, normalizeWithDefaultValue, safeExecute } from '../utils';\nimport { withClerk } from './withClerk';\n\nexport const SignInButton = withClerk(({ clerk, children, ...props }: WithClerkProp<SignInButtonProps>) => {\n  const { afterSignInUrl, afterSignUpUrl, redirectUrl, mode, ...rest } = props;\n\n  children = normalizeWithDefaultValue(children, 'Sign in');\n  const child = assertSingleChild(children)('SignInButton');\n\n  const clickHandler = () => {\n    const opts = { afterSignInUrl, afterSignUpUrl, redirectUrl };\n    if (mode === 'modal') {\n      return clerk.openSignIn(opts);\n    }\n    return clerk.redirectToSignIn(opts);\n  };\n\n  const wrappedChildClickHandler: React.MouseEventHandler = async e => {\n    await safeExecute((child as any).props.onClick)(e);\n    return clickHandler();\n  };\n\n  const childProps = { ...rest, onClick: wrappedChildClickHandler };\n  return React.cloneElement(child as React.ReactElement<unknown>, childProps);\n}, 'SignInButton');\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}