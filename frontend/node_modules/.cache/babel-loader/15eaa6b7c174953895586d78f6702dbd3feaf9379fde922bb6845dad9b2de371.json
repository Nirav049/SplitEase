{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport { useIsomorphicClerkContext } from \"../contexts/IsomorphicClerkContext\";\nimport { useSessionContext } from \"../contexts/SessionContext\";\nimport { LoadedGuarantee } from \"../contexts/StructureContext\";\nimport { useAuth } from \"../hooks\";\nimport { withClerk } from \"./withClerk\";\nconst SignedIn = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    userId\n  } = useAuthContext();\n  if (userId) {\n    return /* @__PURE__ */React.createElement(React.Fragment, null, children);\n  }\n  return null;\n};\nconst SignedOut = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  const {\n    userId\n  } = useAuthContext();\n  if (userId === null) {\n    return /* @__PURE__ */React.createElement(React.Fragment, null, children);\n  }\n  return null;\n};\nconst ClerkLoaded = _ref3 => {\n  let {\n    children\n  } = _ref3;\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(LoadedGuarantee, null, children);\n};\nconst ClerkLoading = _ref4 => {\n  let {\n    children\n  } = _ref4;\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children);\n};\nconst Protect = _ref5 => {\n  let {\n    children,\n    fallback,\n    ...restAuthorizedParams\n  } = _ref5;\n  const {\n    isLoaded,\n    has,\n    userId\n  } = useAuth();\n  if (!isLoaded) {\n    return null;\n  }\n  const unauthorized = /* @__PURE__ */React.createElement(React.Fragment, null, fallback ?? null);\n  const authorized = /* @__PURE__ */React.createElement(React.Fragment, null, children);\n  if (!userId) {\n    return unauthorized;\n  }\n  if (typeof restAuthorizedParams.condition === \"function\") {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  return authorized;\n};\nconst RedirectToSignIn = withClerk(_ref6 => {\n  let {\n    clerk,\n    ...props\n  } = _ref6;\n  const {\n    client,\n    session\n  } = clerk;\n  const {\n    __unstable__environment\n  } = clerk;\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n  React.useEffect(() => {\n    if (session === null && hasActiveSessions && __unstable__environment) {\n      const {\n        afterSignOutOneUrl\n      } = __unstable__environment.displayConfig;\n      void clerk.navigate(afterSignOutOneUrl);\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n  return null;\n}, \"RedirectToSignIn\");\nconst RedirectToSignUp = withClerk(_ref7 => {\n  let {\n    clerk,\n    ...props\n  } = _ref7;\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n  return null;\n}, \"RedirectToSignUp\");\nconst RedirectToUserProfile = withClerk(_ref8 => {\n  let {\n    clerk\n  } = _ref8;\n  React.useEffect(() => {\n    clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, \"RedirectToUserProfile\");\nconst RedirectToOrganizationProfile = withClerk(_ref9 => {\n  let {\n    clerk\n  } = _ref9;\n  React.useEffect(() => {\n    clerk.redirectToOrganizationProfile();\n  }, []);\n  return null;\n}, \"RedirectToOrganizationProfile\");\nconst RedirectToCreateOrganization = withClerk(_ref10 => {\n  let {\n    clerk\n  } = _ref10;\n  React.useEffect(() => {\n    clerk.redirectToCreateOrganization();\n  }, []);\n  return null;\n}, \"RedirectToCreateOrganization\");\nconst AuthenticateWithRedirectCallback = withClerk(_ref11 => {\n  let {\n    clerk,\n    ...handleRedirectCallbackParams\n  } = _ref11;\n  React.useEffect(() => {\n    void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n  }, []);\n  return null;\n}, \"AuthenticateWithRedirectCallback\");\nconst MultisessionAppSupport = _ref12 => {\n  let {\n    children\n  } = _ref12;\n  const session = useSessionContext();\n  return /* @__PURE__ */React.createElement(React.Fragment, {\n    key: session ? session.id : \"no-users\"\n  }, children);\n};\nexport { AuthenticateWithRedirectCallback, ClerkLoaded, ClerkLoading, MultisessionAppSupport, Protect, RedirectToCreateOrganization, RedirectToOrganizationProfile, RedirectToSignIn, RedirectToSignUp, RedirectToUserProfile, SignedIn, SignedOut };","map":{"version":3,"mappings":"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","names":["React","useAuthContext","useIsomorphicClerkContext","useSessionContext","LoadedGuarantee","useAuth","withClerk","SignedIn","_ref","children","userId","SignedOut","_ref2","ClerkLoaded","_ref3","isomorphicClerk","loaded","ClerkLoading","_ref4","Protect","_ref5","fallback","restAuthorizedParams","isLoaded","has","unauthorized","authorized","condition","role","permission","RedirectToSignIn","_ref6","clerk","props","client","session","__unstable__environment","hasActiveSessions","activeSessions","length","useEffect","afterSignOutOneUrl","displayConfig","navigate","redirectToSignIn","RedirectToSignUp","_ref7","redirectToSignUp","RedirectToUserProfile","_ref8","redirectToUserProfile","RedirectToOrganizationProfile","_ref9","redirectToOrganizationProfile","RedirectToCreateOrganization","_ref10","redirectToCreateOrganization","AuthenticateWithRedirectCallback","_ref11","handleRedirectCallbackParams","handleRedirectCallback","MultisessionAppSupport","_ref12","Fragment","key","id"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\controlComponents.tsx"],"sourcesContent":["import type {\n  CheckAuthorizationWithCustomPermissions,\n  HandleOAuthCallbackParams,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useSessionContext } from '../contexts/SessionContext';\nimport { LoadedGuarantee } from '../contexts/StructureContext';\nimport { useAuth } from '../hooks';\nimport type { RedirectToSignInProps, RedirectToSignUpProps, WithClerkProp } from '../types';\nimport { withClerk } from './withClerk';\n\nexport const SignedIn = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const { userId } = useAuthContext();\n  if (userId) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const SignedOut = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const { userId } = useAuthContext();\n  if (userId === null) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const ClerkLoaded = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return <LoadedGuarantee>{children}</LoadedGuarantee>;\n};\n\nexport const ClerkLoading = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return <>{children}</>;\n};\n\ntype ProtectProps = React.PropsWithChildren<\n  (\n    | {\n        condition?: never;\n        role: OrganizationCustomRoleKey;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission: OrganizationCustomPermissionKey;\n      }\n    | {\n        condition: (has: CheckAuthorizationWithCustomPermissions) => boolean;\n        role?: never;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission?: never;\n      }\n  ) & {\n    fallback?: React.ReactNode;\n  }\n>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport const Protect = ({ children, fallback, ...restAuthorizedParams }: ProtectProps) => {\n  const { isLoaded, has, userId } = useAuth();\n\n  /**\n   * Avoid flickering children or fallback while clerk is loading sessionId or userId\n   */\n  if (!isLoaded) {\n    return null;\n  }\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = <>{fallback ?? null}</>;\n\n  const authorized = <>{children}</>;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n};\n\nexport const RedirectToSignIn = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignInProps>) => {\n  const { client, session } = clerk;\n  // TODO: Remove temp use of __unstable__environment\n  const { __unstable__environment } = clerk as any;\n\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n\n  React.useEffect(() => {\n    if (session === null && hasActiveSessions && __unstable__environment) {\n      const { afterSignOutOneUrl } = __unstable__environment.displayConfig;\n      void clerk.navigate(afterSignOutOneUrl);\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n\n  return null;\n}, 'RedirectToSignIn');\n\nexport const RedirectToSignUp = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignUpProps>) => {\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n\n  return null;\n}, 'RedirectToSignUp');\n\nexport const RedirectToUserProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToUserProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToUserProfile');\n\nexport const RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToOrganizationProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToOrganizationProfile');\n\nexport const RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToCreateOrganization();\n  }, []);\n\n  return null;\n}, 'RedirectToCreateOrganization');\n\nexport const AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }: WithClerkProp<HandleOAuthCallbackParams>) => {\n    React.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n\n    return null;\n  },\n  'AuthenticateWithRedirectCallback',\n);\n\nexport const MultisessionAppSupport = ({ children }: React.PropsWithChildren<unknown>): JSX.Element => {\n  const session = useSessionContext();\n  return <React.Fragment key={session ? session.id : 'no-users'}>{children}</React.Fragment>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}