{"ast":null,"code":"import _objectWithoutProperties from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"initialState\", \"children\"];\nimport \"../chunk-3W5G4CYI.js\";\nimport { isLegacyFrontendApiKey, isPublishableKey } from \"@clerk/shared/keys\";\nimport React from \"react\";\nimport { multipleClerkProvidersError } from \"../errors\";\nimport { __internal__setErrorThrowerOptions, errorThrower, withMaxAllowedInstancesGuard } from \"../utils\";\nimport { ClerkContextProvider } from \"./ClerkContextProvider\";\nimport { StructureContext, StructureContextStates } from \"./StructureContext\";\n__internal__setErrorThrowerOptions({\n  packageName: \"@clerk/clerk-react\"\n});\nfunction ClerkProviderBase(props) {\n  var initialState = props.initialState,\n    children = props.children,\n    restIsomorphicClerkOptions = _objectWithoutProperties(props, _excluded);\n  var _restIsomorphicClerkO = restIsomorphicClerkOptions.frontendApi,\n    frontendApi = _restIsomorphicClerkO === void 0 ? \"\" : _restIsomorphicClerkO,\n    _restIsomorphicClerkO2 = restIsomorphicClerkOptions.publishableKey,\n    publishableKey = _restIsomorphicClerkO2 === void 0 ? \"\" : _restIsomorphicClerkO2,\n    userInitialisedClerk = restIsomorphicClerkOptions.Clerk;\n  if (!userInitialisedClerk) {\n    if (!publishableKey && !frontendApi) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({\n        key: publishableKey\n      });\n    } else if (!publishableKey && frontendApi && !isLegacyFrontendApiKey(frontendApi)) {\n      errorThrower.throwInvalidFrontendApiError({\n        key: frontendApi\n      });\n    }\n  }\n  return /* @__PURE__ */React.createElement(StructureContext.Provider, {\n    value: StructureContextStates.noGuarantees\n  }, /* @__PURE__ */React.createElement(ClerkContextProvider, {\n    initialState: initialState,\n    isomorphicClerkOptions: restIsomorphicClerkOptions\n  }, children));\n}\nvar ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, \"ClerkProvider\", multipleClerkProvidersError);\nClerkProvider.displayName = \"ClerkProvider\";\nexport { ClerkProvider, __internal__setErrorThrowerOptions };","map":{"version":3,"mappings":";;;AAAA,SAASA,wBAAwBC,wBAAwB;AAEzD,OAAOC,WAAW;AAElB,SAASC,mCAAmC;AAE5C,SAASC,oCAAoCC,cAAcC,oCAAoC;AAC/F,SAASC,4BAA4B;AACrC,SAASC,kBAAkBC,8BAA8B;AAEzDL,mCAAmC;EACjCM,aAAa;AACf,CAAC;AAOD,SAASC,kBAAkBC,OAAwC;EACjE,IAAQC,eAA0DD,MAA1DC;IAAcC,WAA4CF,MAA5CE;IAAaC,sDAA+BH;EAClE,4BAA+EG,2BAAvEC;IAAAA,iDAAc;IAAAC,yBAAyDF,2BAArDG;IAAAA,qDAAiB;IAAWC,uBAAyBJ,2BAAhCK;EAE/C,IAAI,CAACD,sBAAsB;IACzB,IAAI,CAACD,kBAAkB,CAACF,aAAa;MACnCX,aAAagB,gCAAgC;IAC/C,WAAWH,kBAAkB,CAACjB,iBAAiBiB,cAAc,GAAG;MAC9Db,aAAaiB,gCAAgC;QAAEC,KAAKL;MAAe,CAAC;IACtE,WAAW,CAACA,kBAAkBF,eAAe,CAAChB,uBAAuBgB,WAAW,GAAG;MACjFX,aAAamB,6BAA6B;QAAED,KAAKP;MAAY,CAAC;IAChE;EACF;EAEA,OACE,mCAACR,iBAAiBiB,UAAjB;IAA0BC,OAAOjB,uBAAuBkB;EAAA,GACvD,mCAACpB;IACCM;IACAe,wBAAwBb;EAAA,GAEvBD,QACH,CACF;AAEJ;AAEA,IAAMe,gBAAgBvB,6BAA6BK,mBAAmB,iBAAiBR,2BAA2B;AAElH0B,cAAcC,cAAc","names":["isLegacyFrontendApiKey","isPublishableKey","React","multipleClerkProvidersError","__internal__setErrorThrowerOptions","errorThrower","withMaxAllowedInstancesGuard","ClerkContextProvider","StructureContext","StructureContextStates","packageName","ClerkProviderBase","props","initialState","children","restIsomorphicClerkOptions","frontendApi","_restIsomorphicClerkO2","publishableKey","userInitialisedClerk","Clerk","throwMissingPublishableKeyError","throwInvalidPublishableKeyError","key","throwInvalidFrontendApiError","Provider","value","noGuarantees","isomorphicClerkOptions","ClerkProvider","displayName"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\contexts\\ClerkProvider.tsx"],"sourcesContent":["import { isLegacyFrontendApiKey, isPublishableKey } from '@clerk/shared/keys';\nimport type { InitialState } from '@clerk/types';\nimport React from 'react';\n\nimport { multipleClerkProvidersError } from '../errors';\nimport type { IsomorphicClerkOptions } from '../types';\nimport { __internal__setErrorThrowerOptions, errorThrower, withMaxAllowedInstancesGuard } from '../utils';\nimport { ClerkContextProvider } from './ClerkContextProvider';\nimport { StructureContext, StructureContextStates } from './StructureContext';\n\n__internal__setErrorThrowerOptions({\n  packageName: '@clerk/clerk-react',\n});\n\nexport type ClerkProviderProps = IsomorphicClerkOptions & {\n  children: React.ReactNode;\n  initialState?: InitialState;\n};\n\nfunction ClerkProviderBase(props: ClerkProviderProps): JSX.Element {\n  const { initialState, children, ...restIsomorphicClerkOptions } = props;\n  const { frontendApi = '', publishableKey = '', Clerk: userInitialisedClerk } = restIsomorphicClerkOptions;\n\n  if (!userInitialisedClerk) {\n    if (!publishableKey && !frontendApi) {\n      errorThrower.throwMissingPublishableKeyError();\n    } else if (publishableKey && !isPublishableKey(publishableKey)) {\n      errorThrower.throwInvalidPublishableKeyError({ key: publishableKey });\n    } else if (!publishableKey && frontendApi && !isLegacyFrontendApiKey(frontendApi)) {\n      errorThrower.throwInvalidFrontendApiError({ key: frontendApi });\n    }\n  }\n\n  return (\n    <StructureContext.Provider value={StructureContextStates.noGuarantees}>\n      <ClerkContextProvider\n        initialState={initialState}\n        isomorphicClerkOptions={restIsomorphicClerkOptions}\n      >\n        {children}\n      </ClerkContextProvider>\n    </StructureContext.Provider>\n  );\n}\n\nconst ClerkProvider = withMaxAllowedInstancesGuard(ClerkProviderBase, 'ClerkProvider', multipleClerkProvidersError);\n\nClerkProvider.displayName = 'ClerkProvider';\n\nexport { ClerkProvider, __internal__setErrorThrowerOptions };\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}