{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { assertWrappedByClerkProvider } from \"./assertHelpers\";\nconst StructureContextStates = Object.freeze({\n  noGuarantees: Object.freeze({\n    guaranteedLoaded: false\n  }),\n  guaranteedLoaded: Object.freeze({\n    guaranteedLoaded: true\n  })\n});\nconst StructureContext = React.createContext(void 0);\nStructureContext.displayName = \"StructureContext\";\nconst useStructureContext = () => {\n  const structureCtx = React.useContext(StructureContext);\n  assertWrappedByClerkProvider(structureCtx);\n  return structureCtx;\n};\nconst LoadedGuarantee = _ref => {\n  let {\n    children\n  } = _ref;\n  const structure = useStructureContext();\n  if (structure.guaranteedLoaded) {\n    return /* @__PURE__ */React.createElement(React.Fragment, null, children);\n  }\n  return /* @__PURE__ */React.createElement(StructureContext.Provider, {\n    value: StructureContextStates.guaranteedLoaded\n  }, children);\n};\nexport { LoadedGuarantee, StructureContext, StructureContextStates };","map":{"version":3,"mappings":";AAAA,OAAOA,WAAW;AAElB,SAASC,oCAAoC;AAMtC,MAAMC,yBAAyBC,OAAOC,OAAO;EAClDC,cAAcF,OAAOC,OAAO;IAC1BE,kBAAkB;EACpB,CAAC;EACDA,kBAAkBH,OAAOC,OAAO;IAC9BE,kBAAkB;EACpB,CAAC;AACH,CAAC;AAEM,MAAMC,mBAAmBP,MAAMQ,cAAiD,MAAS;AAEhGD,iBAAiBE,cAAc;AAE/B,MAAMC,sBAAsBA,MAA6B;EACvD,MAAMC,eAAeX,MAAMY,WAAWL,gBAAgB;EACtDN,6BAA6BU,YAAY;EACzC,OAAOA;AACT;AAEO,MAAME,kBAA8DC,QAAkB;EAAA,IAAjB;IAAEC;EAAS;EACrF,MAAMC,YAAYN,oBAAoB;EACtC,IAAIM,UAAUV,kBAAkB;IAC9B,OAAO,yDAAGS,QAAS;EACrB;EACA,OACE,mCAACR,iBAAiBU,UAAjB;IAA0BC,OAAOhB,uBAAuBI;EAAA,GAAmBS,QAAS;AAEzF","names":["React","assertWrappedByClerkProvider","StructureContextStates","Object","freeze","noGuarantees","guaranteedLoaded","StructureContext","createContext","displayName","useStructureContext","structureCtx","useContext","LoadedGuarantee","_ref","children","structure","Provider","value"],"sources":["D:\\split project\\SplitEase\\frontend\\node_modules\\@clerk\\clerk-react\\src\\contexts\\StructureContext.tsx"],"sourcesContent":["import React from 'react';\n\nimport { assertWrappedByClerkProvider } from './assertHelpers';\n\nexport interface StructureContextValue {\n  guaranteedLoaded: boolean;\n}\n\nexport const StructureContextStates = Object.freeze({\n  noGuarantees: Object.freeze({\n    guaranteedLoaded: false,\n  }),\n  guaranteedLoaded: Object.freeze({\n    guaranteedLoaded: true,\n  }),\n});\n\nexport const StructureContext = React.createContext<StructureContextValue | undefined>(undefined);\n\nStructureContext.displayName = 'StructureContext';\n\nconst useStructureContext = (): StructureContextValue => {\n  const structureCtx = React.useContext(StructureContext);\n  assertWrappedByClerkProvider(structureCtx);\n  return structureCtx;\n};\n\nexport const LoadedGuarantee: React.FC<React.PropsWithChildren<unknown>> = ({ children }) => {\n  const structure = useStructureContext();\n  if (structure.guaranteedLoaded) {\n    return <>{children}</>;\n  }\n  return (\n    <StructureContext.Provider value={StructureContextStates.guaranteedLoaded}>{children}</StructureContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}