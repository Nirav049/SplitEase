{"ast":null,"code":"import _objectSpread from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nvar counts = /* @__PURE__ */new Map();\nfunction useMaxAllowedInstancesGuard(name, error) {\n  var maxCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  React.useEffect(function () {\n    var count = counts.get(name) || 0;\n    if (count == maxCount) {\n      throw new Error(error);\n    }\n    counts.set(name, count + 1);\n    return function () {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\nfunction withMaxAllowedInstancesGuard(WrappedComponent, name, error) {\n  var displayName = WrappedComponent.displayName || WrappedComponent.name || name || \"Component\";\n  var Hoc = function Hoc(props) {\n    useMaxAllowedInstancesGuard(name, error);\n    return /* @__PURE__ */React.createElement(WrappedComponent, _objectSpread({}, props));\n  };\n  Hoc.displayName = \"withMaxAllowedInstancesGuard(\".concat(displayName, \")\");\n  return Hoc;\n}\nexport { useMaxAllowedInstancesGuard, withMaxAllowedInstancesGuard };","map":{"version":3,"mappings":";;AAAA,OAAOA,WAAW;AAElB,IAAMC,SAAS,mBAAIC,IAAoB;AAEhC,SAASC,4BAA4BC,MAAcC,OAAmC;EAAA,IAApBC,+EAAW;EAClFN,MAAMO,UAAU,YAAM;IACpB,IAAMC,QAAQP,OAAOQ,IAAIL,IAAI,KAAK;IAClC,IAAII,SAASF,UAAU;MACrB,MAAM,IAAII,MAAML,KAAK;IACvB;IACAJ,OAAOU,IAAIP,MAAMI,QAAQ,CAAC;IAE1B,OAAO,YAAM;MACXP,OAAOU,IAAIP,OAAOH,OAAOQ,IAAIL,IAAI,KAAK,KAAK,CAAC;IAC9C;EACF,GAAG,EAAE;AACP;AAEO,SAASQ,6BACdC,kBACAT,MACAC,OACwB;EACxB,IAAMS,cAAcD,iBAAiBC,eAAeD,iBAAiBT,QAAQA,QAAQ;EACrF,IAAMW,MAAM,SAANA,IAAOC,OAAa;IACxBb,4BAA4BC,MAAMC,KAAK;IACvC,OAAO,mCAACQ,oCAAsBG,MAAe;EAC/C;EACAD,IAAID,qDAA8CA,WAAW;EAC7D,OAAOC;AACT","names":["React","counts","Map","useMaxAllowedInstancesGuard","name","error","maxCount","useEffect","count","get","Error","set","withMaxAllowedInstancesGuard","WrappedComponent","displayName","Hoc","props"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\utils\\useMaxAllowedInstancesGuard.tsx"],"sourcesContent":["import React from 'react';\n\nconst counts = new Map<string, number>();\n\nexport function useMaxAllowedInstancesGuard(name: string, error: string, maxCount = 1): void {\n  React.useEffect(() => {\n    const count = counts.get(name) || 0;\n    if (count == maxCount) {\n      throw new Error(error);\n    }\n    counts.set(name, count + 1);\n\n    return () => {\n      counts.set(name, (counts.get(name) || 1) - 1);\n    };\n  }, []);\n}\n\nexport function withMaxAllowedInstancesGuard<P>(\n  WrappedComponent: React.ComponentType<P>,\n  name: string,\n  error: string,\n): React.ComponentType<P> {\n  const displayName = WrappedComponent.displayName || WrappedComponent.name || name || 'Component';\n  const Hoc = (props: P) => {\n    useMaxAllowedInstancesGuard(name, error);\n    return <WrappedComponent {...(props as any)} />;\n  };\n  Hoc.displayName = `withMaxAllowedInstancesGuard(${displayName})`;\n  return Hoc;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}