{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nconst versionSelector = clerkJSVersion => {\n  if (clerkJSVersion) {\n    return clerkJSVersion;\n  }\n  const prereleaseTag = getPrereleaseTag(\"4.30.5\");\n  if (prereleaseTag) {\n    if (prereleaseTag === \"snapshot\") {\n      return \"4.70.0\";\n    }\n    return prereleaseTag;\n  }\n  return getMajorVersion(\"4.30.5\");\n};\nconst getPrereleaseTag = packageVersion => packageVersion.match(/-(.*)\\./)?.[1];\nconst getMajorVersion = packageVersion => packageVersion.split(\".\")[0];\nexport { versionSelector };","map":{"version":3,"mappings":";AASO,MAAMA,kBAAmBC,kBAAuC;EACrE,IAAIA,gBAAgB;IAClB,OAAOA;EACT;EAEA,MAAMC,gBAAgBC,iBAAiB,QAAe;EACtD,IAAID,eAAe;IACjB,IAAIA,kBAAkB,YAAY;MAChC,OAAO;IACT;IAEA,OAAOA;EACT;EAEA,OAAOE,gBAAgB,QAAe;AACxC;AAGA,MAAMD,mBAAoBE,kBAA2BA,eAAeC,MAAM,SAAS,IAAI,CAAC;AACxF,MAAMF,kBAAmBC,kBAA2BA,eAAeE,MAAM,GAAG,EAAE,CAAC","names":["versionSelector","clerkJSVersion","prereleaseTag","getPrereleaseTag","getMajorVersion","packageVersion","match","split"],"sources":["D:\\split project\\SplitEase\\frontend\\node_modules\\@clerk\\clerk-react\\src\\utils\\versionSelector.ts"],"sourcesContent":["/**\n * This version selector is a bit complicated, so here is the flow:\n * 1. Use the clerkJSVersion prop on the provider\n * 2. Use the exact `@clerk/clerk-js` version if it is a `@snapshot` prerelease for `@clerk/clerk-react`\n * 3. Use the prerelease tag of `@clerk/clerk-react`\n * 4. Fallback to the major version of `@clerk/clerk-react`\n * @param clerkJSVersion - The optional clerkJSVersion prop on the provider\n * @returns The npm tag, version or major version to use\n */\nexport const versionSelector = (clerkJSVersion: string | undefined) => {\n  if (clerkJSVersion) {\n    return clerkJSVersion;\n  }\n\n  const prereleaseTag = getPrereleaseTag(PACKAGE_VERSION);\n  if (prereleaseTag) {\n    if (prereleaseTag === 'snapshot') {\n      return JS_PACKAGE_VERSION;\n    }\n\n    return prereleaseTag;\n  }\n\n  return getMajorVersion(PACKAGE_VERSION);\n};\n\n// TODO: Replace these with \"semver\" package\nconst getPrereleaseTag = (packageVersion: string) => packageVersion.match(/-(.*)\\./)?.[1];\nconst getMajorVersion = (packageVersion: string) => packageVersion.split('.')[0];\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}