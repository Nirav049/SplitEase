{"ast":null,"code":"import _regeneratorRuntime from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// src/utils/noop.ts\nvar noop = function noop() {};\n\n// src/workerTimers/workerTimers.worker.ts\nvar workerTimers_worker_default = 'const respond=r=>{self.postMessage(r)},workerToTabIds={};self.addEventListener(\"message\",r=>{const e=r.data;switch(e.type){case\"setTimeout\":workerToTabIds[e.id]=setTimeout(()=>{respond({id:e.id})},e.ms);break;case\"clearTimeout\":workerToTabIds[e.id]&&(clearTimeout(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break;case\"setInterval\":workerToTabIds[e.id]=setInterval(()=>{respond({id:e.id})},e.ms);break;case\"clearInterval\":workerToTabIds[e.id]&&(clearInterval(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break}});\\n';\n\n// src/workerTimers/createWorkerTimers.ts\nvar createWebWorker = function createWebWorker(source) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof Worker === \"undefined\") {\n    return null;\n  }\n  try {\n    var blob = new Blob([source], {\n      type: \"application/javascript; charset=utf-8\"\n    });\n    var workerScript = globalThis.URL.createObjectURL(blob);\n    return new Worker(workerScript, opts);\n  } catch (e) {\n    console.warn(\"Clerk: Cannot create worker from blob. Consider adding worker-src blob:; to your CSP\");\n    return null;\n  }\n};\nvar fallbackTimers = function fallbackTimers() {\n  var setTimeout = globalThis.setTimeout.bind(globalThis);\n  var setInterval = globalThis.setInterval.bind(globalThis);\n  var clearTimeout = globalThis.clearTimeout.bind(globalThis);\n  var clearInterval = globalThis.clearInterval.bind(globalThis);\n  return {\n    setTimeout: setTimeout,\n    setInterval: setInterval,\n    clearTimeout: clearTimeout,\n    clearInterval: clearInterval,\n    cleanup: noop\n  };\n};\nvar createWorkerTimers = function createWorkerTimers() {\n  var _worker;\n  var id = 0;\n  var generateId = function generateId() {\n    return id++;\n  };\n  var callbacks = /* @__PURE__ */new Map();\n  var post = function post(w, p) {\n    return w === null || w === void 0 ? void 0 : w.postMessage(p);\n  };\n  var handleMessage = function handleMessage(e) {\n    var _callbacks$get;\n    (_callbacks$get = callbacks.get(e.data.id)) === null || _callbacks$get === void 0 ? void 0 : _callbacks$get();\n  };\n  var worker = createWebWorker(workerTimers_worker_default, {\n    name: \"clerk-timers\"\n  });\n  (_worker = worker) === null || _worker === void 0 ? void 0 : _worker.addEventListener(\"message\", handleMessage);\n  if (!worker) {\n    return fallbackTimers();\n  }\n  var init = function init() {\n    if (!worker) {\n      var _worker2;\n      worker = createWebWorker(workerTimers_worker_default, {\n        name: \"clerk-timers\"\n      });\n      (_worker2 = worker) === null || _worker2 === void 0 ? void 0 : _worker2.addEventListener(\"message\", handleMessage);\n    }\n  };\n  var cleanup = function cleanup() {\n    if (worker) {\n      worker.terminate();\n      worker = null;\n      callbacks.clear();\n    }\n  };\n  var setTimeout = function setTimeout(cb, ms) {\n    init();\n    var id2 = generateId();\n    callbacks.set(id2, cb);\n    post(worker, {\n      type: \"setTimeout\",\n      id: id2,\n      ms: ms\n    });\n    return id2;\n  };\n  var setInterval = function setInterval(cb, ms) {\n    init();\n    var id2 = generateId();\n    callbacks.set(id2, cb);\n    post(worker, {\n      type: \"setInterval\",\n      id: id2,\n      ms: ms\n    });\n    return id2;\n  };\n  var clearTimeout = function clearTimeout(id2) {\n    init();\n    callbacks.delete(id2);\n    post(worker, {\n      type: \"clearTimeout\",\n      id: id2\n    });\n  };\n  var clearInterval = function clearInterval(id2) {\n    init();\n    callbacks.delete(id2);\n    post(worker, {\n      type: \"clearInterval\",\n      id: id2\n    });\n  };\n  return {\n    setTimeout: setTimeout,\n    setInterval: setInterval,\n    clearTimeout: clearTimeout,\n    clearInterval: clearInterval,\n    cleanup: cleanup\n  };\n};\n\n// src/poller.ts\nfunction Poller() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      delayInMs: 1e3\n    },\n    delayInMs = _ref.delayInMs;\n  var workerTimers = createWorkerTimers();\n  var timerId;\n  var stopped = false;\n  var stop = function stop() {\n    if (timerId) {\n      workerTimers.clearTimeout(timerId);\n      workerTimers.cleanup();\n    }\n    stopped = true;\n  };\n  var run = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(cb) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            stopped = false;\n            _context.next = 3;\n            return cb(stop);\n          case 3:\n            if (!stopped) {\n              _context.next = 5;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 5:\n            timerId = workerTimers.setTimeout(function () {\n              void run(cb);\n            }, delayInMs);\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function run(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return {\n    run: run,\n    stop: stop\n  };\n}\nexport { noop, createWorkerTimers, Poller };","map":{"version":3,"mappings":";;;AACO,IAAMA,OAAO,SAAPA,OAAkC,CAAC;;;ACDhD;;;ACYA,IAAMC,kBAAkB,SAAlBA,gBAAmBC,QAAsF;EAAA,IAAtEC,2EAAgD,CAAC;EACxF,IAAI,OAAOC,WAAW,aAAa;IACjC,OAAO;EACT;EAEA,IAAI;IACF,IAAMC,OAAO,IAAIC,KAAK,CAACJ,MAAM,GAAG;MAAEK,MAAM;IAAwC,CAAC;IACjF,IAAMC,eAAeC,WAAWC,IAAIC,gBAAgBN,IAAI;IACxD,OAAO,IAAID,OAAOI,cAAcL,IAAI;EACtC,SAASS,GAAG;IACVC,QAAQC,KAAK,sFAAsF;IACnG,OAAO;EACT;AACF;AAEA,IAAMC,iBAAiB,SAAjBA,iBAAuB;EAC3B,IAAMC,aAAaP,WAAWO,WAAWC,KAAKR,UAAU;EACxD,IAAMS,cAAcT,WAAWS,YAAYD,KAAKR,UAAU;EAC1D,IAAMU,eAAeV,WAAWU,aAAaF,KAAKR,UAAU;EAC5D,IAAMW,gBAAgBX,WAAWW,cAAcH,KAAKR,UAAU;EAC9D,OAAO;IAAEO;IAAYE;IAAaC;IAAcC;IAAeC,SAASrB;EAAK;AAC/E;AAEO,IAAMsB,qBAAqB,SAArBA,qBAA2B;EAAA;EACtC,IAAIC,KAAK;EACT,IAAMC,aAAa,SAAbA;IAAA,OAAmBD;EAAA;EACzB,IAAME,YAAY,mBAAIC,IAA0C;EAChE,IAAMC,OAAO,SAAPA,KAAQC,GAAkBC;IAAA,OAAwBD,wCAAGE,YAAYD,CAAC;EAAA;EACxE,IAAME,gBAAgB,SAAhBA,cAAiBnB,GAA8C;IAAA;IACnE,4BAAUoB,IAAIpB,EAAEqB,KAAKV,EAAE,oDAAvBW,eAA2B;EAC7B;EAEA,IAAIC,SAASlC,gBAAgBmC,6BAAoB;IAAEC,MAAM;EAAe,CAAC;EACzE,qEAAQC,iBAAiB,WAAWP,aAAa;EAEjD,IAAI,CAACI,QAAQ;IACX,OAAOpB,eAAe;EACxB;EAEA,IAAMwB,OAAO,SAAPA,OAAa;IACjB,IAAI,CAACJ,QAAQ;MAAA;MACXA,SAASlC,gBAAgBmC,6BAAoB;QAAEC,MAAM;MAAe,CAAC;MACrE,wEAAQC,iBAAiB,WAAWP,aAAa;IACnD;EACF;EAEA,IAAMV,UAAU,SAAVA,UAAgB;IACpB,IAAIc,QAAQ;MACVA,OAAOK,UAAU;MACjBL,SAAS;MACTV,UAAUgB,MAAM;IAClB;EACF;EAEA,IAAMzB,aAA+B,SAA/BA,WAAgC0B,IAAIC,IAAO;IAC/CJ,KAAK;IACL,IAAMhB,MAAKC,WAAW;IACtBC,UAAUmB,IAAIrB,KAAImB,EAAE;IACpBf,KAAKQ,QAAQ;MAAE5B,MAAM;MAAcgB;MAAIoB;IAAG,CAAC;IAC3C,OAAOpB;EACT;EAEA,IAAML,cAAgC,SAAhCA,YAAiCwB,IAAIC,IAAO;IAChDJ,KAAK;IACL,IAAMhB,MAAKC,WAAW;IACtBC,UAAUmB,IAAIrB,KAAImB,EAAE;IACpBf,KAAKQ,QAAQ;MAAE5B,MAAM;MAAegB;MAAIoB;IAAG,CAAC;IAC5C,OAAOpB;EACT;EAEA,IAAMJ,eAAmC,SAAnCA,aAAmCI,KAAM;IAC7CgB,KAAK;IACLd,UAAUoB,OAAOtB,GAAE;IACnBI,KAAKQ,QAAQ;MAAE5B,MAAM;MAAgBgB;IAAG,CAAC;EAC3C;EAEA,IAAMH,gBAAoC,SAApCA,cAAoCG,KAAM;IAC9CgB,KAAK;IACLd,UAAUoB,OAAOtB,GAAE;IACnBI,KAAKQ,QAAQ;MAAE5B,MAAM;MAAiBgB;IAAG,CAAC;EAC5C;EAEA,OAAO;IAAEP;IAAYE;IAAaC;IAAcC;IAAeC;EAAQ;AACzE;;;AChFO,SAASyB,SAAmE;EAAA,+EAA7B;MAAEC,WAAW;IAAK;IAA/CA;EACvB,IAAMC,eAAe1B,mBAAmB;EAExC,IAAI2B;EACJ,IAAIC,UAAU;EAEd,IAAMC,OAAmB,SAAnBA,OAAyB;IAC7B,IAAIF,SAAS;MACXD,aAAa7B,aAAa8B,OAAO;MACjCD,aAAa3B,QAAQ;IACvB;IACA6B,UAAU;EACZ;EAEA,IAAME;IAAA,uEAAiB,iBAAMV;MAAA;QAAA;UAAA;YAC3BQ,UAAU;YAAAG;YAAA,OACJX,GAAGS,IAAI;UAAA;YAAA,KACTD;cAAAG;cAAA;YAAA;YAAA;UAAA;YAIJJ,UAAUD,aAAahC,WAAW,YAAM;cACtC,KAAKoC,IAAIV,EAAE;YACb,GAAGK,SAAS;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA,CACd;IAAA,gBAVMK;MAAA;IAAA;EAAA,GAUN;EAEA,OAAO;IAAEA;IAAKD;EAAK;AACrB","names":["noop","createWebWorker","source","opts","Worker","blob","Blob","type","workerScript","globalThis","URL","createObjectURL","e","console","warn","fallbackTimers","setTimeout","bind","setInterval","clearTimeout","clearInterval","cleanup","createWorkerTimers","id","generateId","callbacks","Map","post","w","p","postMessage","handleMessage","get","data","_callbacks$get","worker","workerTimers_worker_default","name","addEventListener","init","terminate","clear","cb","ms","set","delete","Poller","delayInMs","workerTimers","timerId","stopped","stop","run","_context"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\shared\\src\\utils\\noop.ts","D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\shared\\src\\workerTimers\\workerTimers.worker.ts","D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\shared\\src\\workerTimers\\createWorkerTimers.ts","D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\shared\\src\\poller.ts"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = (..._args: any[]): void => {};\n","const respond=r=>{self.postMessage(r)},workerToTabIds={};self.addEventListener(\"message\",r=>{const e=r.data;switch(e.type){case\"setTimeout\":workerToTabIds[e.id]=setTimeout(()=>{respond({id:e.id})},e.ms);break;case\"clearTimeout\":workerToTabIds[e.id]&&(clearTimeout(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break;case\"setInterval\":workerToTabIds[e.id]=setInterval(()=>{respond({id:e.id})},e.ms);break;case\"clearInterval\":workerToTabIds[e.id]&&(clearInterval(workerToTabIds[e.id]),delete workerToTabIds[e.id]);break}});\n","import { noop } from '../utils/noop';\nimport type {\n  WorkerClearTimeout,\n  WorkerSetTimeout,\n  WorkerTimeoutCallback,\n  WorkerTimerEvent,\n  WorkerTimerId,\n  WorkerTimerResponseEvent,\n} from './workerTimers.types';\n// @ts-ignore\nimport pollerWorkerSource from './workerTimers.worker';\n\nconst createWebWorker = (source: string, opts: ConstructorParameters<typeof Worker>[1] = {}): Worker | null => {\n  if (typeof Worker === 'undefined') {\n    return null;\n  }\n\n  try {\n    const blob = new Blob([source], { type: 'application/javascript; charset=utf-8' });\n    const workerScript = globalThis.URL.createObjectURL(blob);\n    return new Worker(workerScript, opts);\n  } catch (e) {\n    console.warn('Clerk: Cannot create worker from blob. Consider adding worker-src blob:; to your CSP');\n    return null;\n  }\n};\n\nconst fallbackTimers = () => {\n  const setTimeout = globalThis.setTimeout.bind(globalThis) as WorkerSetTimeout;\n  const setInterval = globalThis.setInterval.bind(globalThis) as WorkerSetTimeout;\n  const clearTimeout = globalThis.clearTimeout.bind(globalThis) as WorkerClearTimeout;\n  const clearInterval = globalThis.clearInterval.bind(globalThis) as WorkerClearTimeout;\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup: noop };\n};\n\nexport const createWorkerTimers = () => {\n  let id = 0;\n  const generateId = () => id++;\n  const callbacks = new Map<WorkerTimerId, WorkerTimeoutCallback>();\n  const post = (w: Worker | null, p: WorkerTimerEvent) => w?.postMessage(p);\n  const handleMessage = (e: MessageEvent<WorkerTimerResponseEvent>) => {\n    callbacks.get(e.data.id)?.();\n  };\n\n  let worker = createWebWorker(pollerWorkerSource, { name: 'clerk-timers' });\n  worker?.addEventListener('message', handleMessage);\n\n  if (!worker) {\n    return fallbackTimers();\n  }\n\n  const init = () => {\n    if (!worker) {\n      worker = createWebWorker(pollerWorkerSource, { name: 'clerk-timers' });\n      worker?.addEventListener('message', handleMessage);\n    }\n  };\n\n  const cleanup = () => {\n    if (worker) {\n      worker.terminate();\n      worker = null;\n      callbacks.clear();\n    }\n  };\n\n  const setTimeout: WorkerSetTimeout = (cb, ms) => {\n    init();\n    const id = generateId();\n    callbacks.set(id, cb);\n    post(worker, { type: 'setTimeout', id, ms });\n    return id;\n  };\n\n  const setInterval: WorkerSetTimeout = (cb, ms) => {\n    init();\n    const id = generateId();\n    callbacks.set(id, cb);\n    post(worker, { type: 'setInterval', id, ms });\n    return id;\n  };\n\n  const clearTimeout: WorkerClearTimeout = id => {\n    init();\n    callbacks.delete(id);\n    post(worker, { type: 'clearTimeout', id });\n  };\n\n  const clearInterval: WorkerClearTimeout = id => {\n    init();\n    callbacks.delete(id);\n    post(worker, { type: 'clearInterval', id });\n  };\n\n  return { setTimeout, setInterval, clearTimeout, clearInterval, cleanup };\n};\n","import { createWorkerTimers } from './workerTimers';\n\nexport type PollerStop = () => void;\nexport type PollerCallback = (stop: PollerStop) => Promise<unknown>;\nexport type PollerRun = (cb: PollerCallback) => Promise<void>;\n\ntype PollerOptions = {\n  delayInMs: number;\n};\n\nexport type Poller = {\n  run: PollerRun;\n  stop: PollerStop;\n};\n\nexport function Poller({ delayInMs }: PollerOptions = { delayInMs: 1000 }): Poller {\n  const workerTimers = createWorkerTimers();\n\n  let timerId: number | undefined;\n  let stopped = false;\n\n  const stop: PollerStop = () => {\n    if (timerId) {\n      workerTimers.clearTimeout(timerId);\n      workerTimers.cleanup();\n    }\n    stopped = true;\n  };\n\n  const run: PollerRun = async cb => {\n    stopped = false;\n    await cb(stop);\n    if (stopped) {\n      return;\n    }\n\n    timerId = workerTimers.setTimeout(() => {\n      void run(cb);\n    }, delayInMs) as any as number;\n  };\n\n  return { run, stop };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}