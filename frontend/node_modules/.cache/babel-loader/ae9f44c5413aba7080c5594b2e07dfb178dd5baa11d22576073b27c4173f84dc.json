{"ast":null,"code":"import _objectSpread from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { useIsomorphicClerkContext } from \"../contexts/IsomorphicClerkContext\";\nimport { LoadedGuarantee } from \"../contexts/StructureContext\";\nimport { hocChildrenNotAFunctionError } from \"../errors\";\nvar withClerk = function withClerk(Component, displayName) {\n  displayName = displayName || Component.displayName || Component.name || \"Component\";\n  Component.displayName = displayName;\n  var HOC = function HOC(props) {\n    var clerk = useIsomorphicClerkContext();\n    if (!clerk.loaded) {\n      return null;\n    }\n    return /* @__PURE__ */React.createElement(LoadedGuarantee, null, /* @__PURE__ */React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      clerk: clerk\n    })));\n  };\n  HOC.displayName = \"withClerk(\".concat(displayName, \")\");\n  return HOC;\n};\nvar WithClerk = function WithClerk(_ref) {\n  var children = _ref.children;\n  var clerk = useIsomorphicClerkContext();\n  if (typeof children !== \"function\") {\n    throw new Error(hocChildrenNotAFunctionError);\n  }\n  if (!clerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(LoadedGuarantee, null, children(clerk));\n};\nexport { WithClerk, withClerk };","map":{"version":3,"mappings":";;AACA,OAAOA,WAAW;AAElB,SAASC,iCAAiC;AAC1C,SAASC,uBAAuB;AAChC,SAASC,oCAAoC;AAEtC,IAAMC,YAAY,SAAZA,UACXC,WACAC,aACG;EACHA,cAAcA,eAAeD,UAAUC,eAAeD,UAAUE,QAAQ;EACxEF,UAAUC,cAAcA;EACxB,IAAME,MAAM,SAANA,IAAOC,OAA4B;IACvC,IAAMC,QAAQT,0BAA0B;IAExC,IAAI,CAACS,MAAMC,QAAQ;MACjB,OAAO;IACT;IAEA,OACE,mCAACT,uBACC,mCAACG,2CACMI;MACLC;IAAA,EACF,CACF;EAEJ;EACAF,IAAIF,kCAA2BA,WAAW;EAC1C,OAAOE;AACT;AAEO,IAAMI,YAER,SAFQA,gBAEU;EAAA,IAAfC;EACN,IAAMH,QAAQT,0BAA0B;EAExC,IAAI,OAAOY,aAAa,YAAY;IAClC,MAAM,IAAIC,MAAMX,4BAA4B;EAC9C;EAEA,IAAI,CAACO,MAAMC,QAAQ;IACjB,OAAO;EACT;EAEA,OAAO,mCAACT,uBAAiBW,SAASH,KAA+B,CAAE;AACrE","names":["React","useIsomorphicClerkContext","LoadedGuarantee","hocChildrenNotAFunctionError","withClerk","Component","displayName","name","HOC","props","clerk","loaded","WithClerk","children","Error"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\withClerk.tsx"],"sourcesContent":["import type { LoadedClerk } from '@clerk/types';\nimport React from 'react';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { LoadedGuarantee } from '../contexts/StructureContext';\nimport { hocChildrenNotAFunctionError } from '../errors';\n\nexport const withClerk = <P extends { clerk: LoadedClerk }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC = (props: Omit<P, 'clerk'>) => {\n    const clerk = useIsomorphicClerkContext();\n\n    if (!clerk.loaded) {\n      return null;\n    }\n\n    return (\n      <LoadedGuarantee>\n        <Component\n          {...(props as P)}\n          clerk={clerk}\n        />\n      </LoadedGuarantee>\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexport const WithClerk: React.FC<{\n  children: (clerk: LoadedClerk) => React.ReactNode;\n}> = ({ children }) => {\n  const clerk = useIsomorphicClerkContext();\n\n  if (typeof children !== 'function') {\n    throw new Error(hocChildrenNotAFunctionError);\n  }\n\n  if (!clerk.loaded) {\n    return null;\n  }\n\n  return <LoadedGuarantee>{children(clerk as unknown as LoadedClerk)}</LoadedGuarantee>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}