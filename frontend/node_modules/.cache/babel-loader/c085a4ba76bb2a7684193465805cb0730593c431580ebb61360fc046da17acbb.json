{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createClass from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport { deprecated } from \"./chunk-KJVJ4CFF.mjs\";\n\n// src/error.ts\nfunction isUnauthorizedError(e) {\n  var _e$errors, _e$errors$;\n  var status = e === null || e === void 0 ? void 0 : e.status;\n  var code = e === null || e === void 0 ? void 0 : (_e$errors = e.errors) === null || _e$errors === void 0 ? void 0 : (_e$errors$ = _e$errors[0]) === null || _e$errors$ === void 0 ? void 0 : _e$errors$.code;\n  return code === \"authentication_invalid\" && status === 401;\n}\nfunction is4xxError(e) {\n  var status = e === null || e === void 0 ? void 0 : e.status;\n  return !!status && status >= 400 && status < 500;\n}\nfunction isNetworkError(e) {\n  var message = (\"\".concat(e.message).concat(e.name) || \"\").toLowerCase().replace(/\\s+/g, \"\");\n  return message.includes(\"networkerror\");\n}\nfunction isKnownError(error) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\nfunction isClerkAPIResponseError(err) {\n  return \"clerkError\" in err;\n}\nfunction isClerkRuntimeError(err) {\n  return \"clerkRuntimeError\" in err;\n}\nfunction isMetamaskError(err) {\n  return \"code\" in err && [4001, 32602, 32603].includes(err.code) && \"message\" in err;\n}\nfunction isUserLockedError(err) {\n  var _err$errors, _err$errors$;\n  return isClerkAPIResponseError(err) && ((_err$errors = err.errors) === null || _err$errors === void 0 ? void 0 : (_err$errors$ = _err$errors[0]) === null || _err$errors$ === void 0 ? void 0 : _err$errors$.code) === \"user_locked\";\n}\nfunction parseErrors() {\n  var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return data.length > 0 ? data.map(parseError) : [];\n}\nfunction parseError(error) {\n  var _error$meta, _error$meta2, _error$meta3, _error$meta4, _error$meta5;\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error === null || error === void 0 ? void 0 : (_error$meta = error.meta) === null || _error$meta === void 0 ? void 0 : _error$meta.param_name,\n      sessionId: error === null || error === void 0 ? void 0 : (_error$meta2 = error.meta) === null || _error$meta2 === void 0 ? void 0 : _error$meta2.session_id,\n      emailAddresses: error === null || error === void 0 ? void 0 : (_error$meta3 = error.meta) === null || _error$meta3 === void 0 ? void 0 : _error$meta3.email_addresses,\n      identifiers: error === null || error === void 0 ? void 0 : (_error$meta4 = error.meta) === null || _error$meta4 === void 0 ? void 0 : _error$meta4.identifiers,\n      zxcvbn: error === null || error === void 0 ? void 0 : (_error$meta5 = error.meta) === null || _error$meta5 === void 0 ? void 0 : _error$meta5.zxcvbn\n    }\n  };\n}\nvar ClerkAPIResponseError = /*#__PURE__*/function (_Error) {\n  _inherits(_ClerkAPIResponseError, _Error);\n  var _super = _createSuper(_ClerkAPIResponseError);\n  function _ClerkAPIResponseError(message, _ref) {\n    var _this;\n    var data = _ref.data,\n      status = _ref.status,\n      clerkTraceId = _ref.clerkTraceId;\n    _classCallCheck(this, _ClerkAPIResponseError);\n    _this = _super.call(this, message);\n    _this.toString = function () {\n      var message = \"[\".concat(_this.name, \"]\\nMessage:\").concat(_this.message, \"\\nStatus:\").concat(_this.status, \"\\nSerialized errors: \").concat(_this.errors.map(function (e) {\n        return JSON.stringify(e);\n      }));\n      if (_this.clerkTraceId) {\n        message += \"\\nClerk Trace ID: \".concat(_this.clerkTraceId);\n      }\n      return message;\n    };\n    Object.setPrototypeOf(_assertThisInitialized(_this), _ClerkAPIResponseError.prototype);\n    _this.status = status;\n    _this.message = message;\n    _this.clerkTraceId = clerkTraceId;\n    _this.clerkError = true;\n    _this.errors = parseErrors(data);\n    return _this;\n  }\n  return _createClass(_ClerkAPIResponseError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar ClerkRuntimeError = /*#__PURE__*/function (_Error2) {\n  _inherits(_ClerkRuntimeError, _Error2);\n  var _super2 = _createSuper(_ClerkRuntimeError);\n  function _ClerkRuntimeError(message, _ref2) {\n    var _this2;\n    var code = _ref2.code;\n    _classCallCheck(this, _ClerkRuntimeError);\n    _this2 = _super2.call(this, message);\n    /**\n     * Returns a string representation of the error.\n     *\n     * @returns {string} A formatted string with the error name and message.\n     * @memberof ClerkRuntimeError\n     */\n    _this2.toString = function () {\n      return \"[\".concat(_this2.name, \"]\\nMessage:\").concat(_this2.message);\n    };\n    Object.setPrototypeOf(_assertThisInitialized(_this2), _ClerkRuntimeError.prototype);\n    _this2.code = code;\n    _this2.message = message;\n    _this2.clerkRuntimeError = true;\n    return _this2;\n  }\n  return _createClass(_ClerkRuntimeError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar MagicLinkError = /*#__PURE__*/function (_Error3) {\n  _inherits(_MagicLinkError, _Error3);\n  var _super3 = _createSuper(_MagicLinkError);\n  function _MagicLinkError(code) {\n    var _this3;\n    _classCallCheck(this, _MagicLinkError);\n    _this3 = _super3.call(this, code);\n    _this3.code = code;\n    Object.setPrototypeOf(_assertThisInitialized(_this3), _MagicLinkError.prototype);\n    deprecated(\"MagicLinkError\", \"Use `EmailLinkError` instead.\");\n    return _this3;\n  }\n  return _createClass(_MagicLinkError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar EmailLinkError = /*#__PURE__*/function (_Error4) {\n  _inherits(_EmailLinkError, _Error4);\n  var _super4 = _createSuper(_EmailLinkError);\n  function _EmailLinkError(code) {\n    var _this4;\n    _classCallCheck(this, _EmailLinkError);\n    _this4 = _super4.call(this, code);\n    _this4.code = code;\n    Object.setPrototypeOf(_assertThisInitialized(_this4), _EmailLinkError.prototype);\n    return _this4;\n  }\n  return _createClass(_EmailLinkError);\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nfunction isMagicLinkError(err) {\n  deprecated(\"isMagicLinkError\", \"Use `isEmailLinkError` instead.\");\n  return err instanceof MagicLinkError;\n}\nfunction isEmailLinkError(err) {\n  return err instanceof EmailLinkError;\n}\nvar _MagicLinkErrorCode = {\n  Expired: \"expired\",\n  Failed: \"failed\"\n};\nvar MagicLinkErrorCode = new Proxy(_MagicLinkErrorCode, {\n  get: function get(target, prop, receiver) {\n    deprecated(\"MagicLinkErrorCode\", \"Use `EmailLinkErrorCode` instead.\");\n    return Reflect.get(target, prop, receiver);\n  }\n});\nvar EmailLinkErrorCode = {\n  Expired: \"expired\",\n  Failed: \"failed\"\n};\nvar DefaultMessages = Object.freeze({\n  InvalidFrontendApiErrorMessage: \"The frontendApi passed to Clerk is invalid. You can get your Frontend API key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})\",\n  InvalidProxyUrlErrorMessage: \"The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})\",\n  InvalidPublishableKeyErrorMessage: \"The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})\",\n  MissingPublishableKeyErrorMessage: \"Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.\"\n});\nfunction buildErrorThrower(_ref3) {\n  var packageName = _ref3.packageName,\n    customMessages = _ref3.customMessages;\n  var pkg = packageName;\n  var messages = _objectSpread(_objectSpread({}, DefaultMessages), customMessages);\n  function buildMessage(rawMessage, replacements) {\n    if (!replacements) {\n      return \"\".concat(pkg, \": \").concat(rawMessage);\n    }\n    var msg = rawMessage;\n    var matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n    var _iterator = _createForOfIteratorHelper(matches),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var match = _step.value;\n        var replacement = (replacements[match[1]] || \"\").toString();\n        msg = msg.replace(\"{{\".concat(match[1], \"}}\"), replacement);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return \"\".concat(pkg, \": \").concat(msg);\n  }\n  return {\n    setPackageName: function setPackageName(_ref4) {\n      var packageName2 = _ref4.packageName;\n      if (typeof packageName2 === \"string\") {\n        pkg = packageName2;\n      }\n      return this;\n    },\n    setMessages: function setMessages(_ref5) {\n      var customMessages2 = _ref5.customMessages;\n      Object.assign(messages, customMessages2 || {});\n      return this;\n    },\n    throwInvalidPublishableKeyError: function throwInvalidPublishableKeyError(params) {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n    throwInvalidFrontendApiError: function throwInvalidFrontendApiError(params) {\n      throw new Error(buildMessage(messages.InvalidFrontendApiErrorMessage, params));\n    },\n    throwInvalidProxyUrl: function throwInvalidProxyUrl(params) {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n    throwMissingPublishableKeyError: function throwMissingPublishableKeyError() {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    }\n  };\n}\nexport { isUnauthorizedError, is4xxError, isNetworkError, isKnownError, isClerkAPIResponseError, isClerkRuntimeError, isMetamaskError, isUserLockedError, parseErrors, parseError, ClerkAPIResponseError, ClerkRuntimeError, MagicLinkError, EmailLinkError, isMagicLinkError, isEmailLinkError, MagicLinkErrorCode, EmailLinkErrorCode, buildErrorThrower };","map":{"version":3,"mappings":"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","names":["isUnauthorizedError","e","status","code","errors","_e$errors","_e$errors$","is4xxError","isNetworkError","message","name","toLowerCase","replace","includes","isKnownError","error","isClerkAPIResponseError","isMetamaskError","isClerkRuntimeError","err","isUserLockedError","_err$errors","_err$errors$","parseErrors","data","length","map","parseError","longMessage","long_message","meta","paramName","_error$meta","param_name","sessionId","_error$meta2","session_id","emailAddresses","_error$meta3","email_addresses","identifiers","_error$meta4","zxcvbn","_error$meta5","ClerkAPIResponseError","_inherits","clerkTraceId","_classCallCheck","_this","toString","JSON","stringify","Object","setPrototypeOf","_ClerkAPIResponseError","prototype","clerkError","Error","ClerkRuntimeError","_this2","_ClerkRuntimeError","clerkRuntimeError","MagicLinkError","_this3","_MagicLinkError","deprecated","EmailLinkError","_this4","_EmailLinkError","isMagicLinkError","isEmailLinkError","_MagicLinkErrorCode","Expired","Failed","MagicLinkErrorCode","Proxy","get","target","prop","receiver","Reflect","EmailLinkErrorCode","DefaultMessages","freeze","InvalidFrontendApiErrorMessage","InvalidProxyUrlErrorMessage","InvalidPublishableKeyErrorMessage","MissingPublishableKeyErrorMessage","buildErrorThrower","packageName","customMessages","pkg","messages","buildMessage","rawMessage","replacements","msg","matches","matchAll","_step","match","replacement","_iterator","setPackageName","setMessages","assign","throwInvalidPublishableKeyError","params","throwInvalidFrontendApiError","throwInvalidProxyUrl","throwMissingPublishableKeyError"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\shared\\src\\error.ts"],"sourcesContent":["import type { ClerkAPIError, ClerkAPIErrorJSON } from '@clerk/types';\n\nimport { deprecated } from './deprecated';\n\nexport function isUnauthorizedError(e: any): boolean {\n  const status = e?.status;\n  const code = e?.errors?.[0]?.code;\n  return code === 'authentication_invalid' && status === 401;\n}\n\nexport function is4xxError(e: any): boolean {\n  const status = e?.status;\n  return !!status && status >= 400 && status < 500;\n}\n\nexport function isNetworkError(e: any): boolean {\n  // TODO: revise during error handling epic\n  const message = (`${e.message}${e.name}` || '').toLowerCase().replace(/\\s+/g, '');\n  return message.includes('networkerror');\n}\n\ninterface ClerkAPIResponseOptions {\n  data: ClerkAPIErrorJSON[];\n  status: number;\n  clerkTraceId?: string;\n}\n\n// For a comprehensive Metamask error list, please see\n// https://docs.metamask.io/guide/ethereum-provider.html#errors\nexport interface MetamaskError extends Error {\n  code: 4001 | 32602 | 32603;\n  message: string;\n  data?: unknown;\n}\n\nexport function isKnownError(error: any) {\n  return isClerkAPIResponseError(error) || isMetamaskError(error) || isClerkRuntimeError(error);\n}\n\nexport function isClerkAPIResponseError(err: any): err is ClerkAPIResponseError {\n  return 'clerkError' in err;\n}\n\n/**\n * Checks if the provided error object is an instance of ClerkRuntimeError.\n *\n * @param {any} err - The error object to check.\n * @returns {boolean} True if the error is a ClerkRuntimeError, false otherwise.\n *\n * @example\n * const error = new ClerkRuntimeError('An error occurred');\n * if (isClerkRuntimeError(error)) {\n *   // Handle ClerkRuntimeError\n *   console.error('ClerkRuntimeError:', error.message);\n * } else {\n *   // Handle other errors\n *   console.error('Other error:', error.message);\n * }\n */\nexport function isClerkRuntimeError(err: any): err is ClerkRuntimeError {\n  return 'clerkRuntimeError' in err;\n}\n\nexport function isMetamaskError(err: any): err is MetamaskError {\n  return 'code' in err && [4001, 32602, 32603].includes(err.code) && 'message' in err;\n}\n\nexport function isUserLockedError(err: any) {\n  return isClerkAPIResponseError(err) && err.errors?.[0]?.code === 'user_locked';\n}\n\nexport function parseErrors(data: ClerkAPIErrorJSON[] = []): ClerkAPIError[] {\n  return data.length > 0 ? data.map(parseError) : [];\n}\n\nexport function parseError(error: ClerkAPIErrorJSON): ClerkAPIError {\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error?.meta?.param_name,\n      sessionId: error?.meta?.session_id,\n      emailAddresses: error?.meta?.email_addresses,\n      identifiers: error?.meta?.identifiers,\n      zxcvbn: error?.meta?.zxcvbn,\n    },\n  };\n}\n\nexport class ClerkAPIResponseError extends Error {\n  clerkError: true;\n\n  status: number;\n  message: string;\n  clerkTraceId?: string;\n\n  errors: ClerkAPIError[];\n\n  constructor(message: string, { data, status, clerkTraceId }: ClerkAPIResponseOptions) {\n    super(message);\n\n    Object.setPrototypeOf(this, ClerkAPIResponseError.prototype);\n\n    this.status = status;\n    this.message = message;\n    this.clerkTraceId = clerkTraceId;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n\n  public toString = () => {\n    let message = `[${this.name}]\\nMessage:${this.message}\\nStatus:${this.status}\\nSerialized errors: ${this.errors.map(\n      e => JSON.stringify(e),\n    )}`;\n\n    if (this.clerkTraceId) {\n      message += `\\nClerk Trace ID: ${this.clerkTraceId}`;\n    }\n\n    return message;\n  };\n}\n\n/**\n * Custom error class for representing Clerk runtime errors.\n *\n * @class ClerkRuntimeError\n * @example\n *   throw new ClerkRuntimeError('An error occurred', { code: 'password_invalid' });\n */\nexport class ClerkRuntimeError extends Error {\n  clerkRuntimeError: true;\n\n  /**\n   * The error message.\n   *\n   * @type {string}\n   * @memberof ClerkRuntimeError\n   */\n  message: string;\n\n  /**\n   * A unique code identifying the error, used for localization\n   *\n   * @type {string}\n   * @memberof ClerkRuntimeError\n   */\n  code: string;\n\n  constructor(message: string, { code }: { code: string }) {\n    super(message);\n\n    Object.setPrototypeOf(this, ClerkRuntimeError.prototype);\n\n    this.code = code;\n    this.message = message;\n    this.clerkRuntimeError = true;\n  }\n\n  /**\n   * Returns a string representation of the error.\n   *\n   * @returns {string} A formatted string with the error name and message.\n   * @memberof ClerkRuntimeError\n   */\n  public toString = () => {\n    return `[${this.name}]\\nMessage:${this.message}`;\n  };\n}\n\n/**\n * @deprecated Use `EmailLinkError` instead.\n */\nexport class MagicLinkError extends Error {\n  code: string;\n\n  constructor(code: string) {\n    super(code);\n    this.code = code;\n    Object.setPrototypeOf(this, MagicLinkError.prototype);\n    deprecated('MagicLinkError', 'Use `EmailLinkError` instead.');\n  }\n}\n\nexport class EmailLinkError extends Error {\n  code: string;\n\n  constructor(code: string) {\n    super(code);\n    this.code = code;\n    Object.setPrototypeOf(this, EmailLinkError.prototype);\n  }\n}\n\n/**\n * Check if the error is a MagicLinkError.\n * @deprecated Use `isEmailLinkError` instead.\n */\nexport function isMagicLinkError(err: Error): err is MagicLinkError {\n  deprecated('isMagicLinkError', 'Use `isEmailLinkError` instead.');\n  return err instanceof MagicLinkError;\n}\n\nexport function isEmailLinkError(err: Error): err is EmailLinkError {\n  return err instanceof EmailLinkError;\n}\n\nconst _MagicLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed',\n};\n\n/**\n * @deprecated Use `EmailLinkErrorCode` instead.\n */\nexport const MagicLinkErrorCode = new Proxy(_MagicLinkErrorCode, {\n  get(target, prop, receiver) {\n    deprecated('MagicLinkErrorCode', 'Use `EmailLinkErrorCode` instead.');\n    return Reflect.get(target, prop, receiver);\n  },\n});\n\nexport const EmailLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed',\n};\n\nconst DefaultMessages = Object.freeze({\n  InvalidFrontendApiErrorMessage: `The frontendApi passed to Clerk is invalid. You can get your Frontend API key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  InvalidProxyUrlErrorMessage: `The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})`,\n  InvalidPublishableKeyErrorMessage: `The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})`,\n  MissingPublishableKeyErrorMessage: `Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.`,\n});\n\ntype MessageKeys = keyof typeof DefaultMessages;\n\ntype Messages = Record<MessageKeys, string>;\n\ntype CustomMessages = Partial<Messages>;\n\nexport type ErrorThrowerOptions = {\n  packageName: string;\n  customMessages?: CustomMessages;\n};\n\nexport interface ErrorThrower {\n  setPackageName(options: ErrorThrowerOptions): ErrorThrower;\n\n  setMessages(options: ErrorThrowerOptions): ErrorThrower;\n\n  throwInvalidPublishableKeyError(params: { key?: string }): never;\n\n  throwInvalidFrontendApiError(params: { key?: string }): never;\n\n  throwInvalidProxyUrl(params: { url?: string }): never;\n\n  throwMissingPublishableKeyError(): never;\n}\n\nexport function buildErrorThrower({ packageName, customMessages }: ErrorThrowerOptions): ErrorThrower {\n  let pkg = packageName;\n\n  const messages = {\n    ...DefaultMessages,\n    ...customMessages,\n  };\n\n  function buildMessage(rawMessage: string, replacements?: Record<string, string | number>) {\n    if (!replacements) {\n      return `${pkg}: ${rawMessage}`;\n    }\n\n    let msg = rawMessage;\n    const matches = rawMessage.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);\n\n    for (const match of matches) {\n      const replacement = (replacements[match[1]] || '').toString();\n      msg = msg.replace(`{{${match[1]}}}`, replacement);\n    }\n\n    return `${pkg}: ${msg}`;\n  }\n\n  return {\n    setPackageName({ packageName }: ErrorThrowerOptions): ErrorThrower {\n      if (typeof packageName === 'string') {\n        pkg = packageName;\n      }\n      return this;\n    },\n\n    setMessages({ customMessages }: ErrorThrowerOptions): ErrorThrower {\n      Object.assign(messages, customMessages || {});\n      return this;\n    },\n\n    throwInvalidPublishableKeyError(params: { key?: string }): never {\n      throw new Error(buildMessage(messages.InvalidPublishableKeyErrorMessage, params));\n    },\n\n    throwInvalidFrontendApiError(params: { key?: string }): never {\n      throw new Error(buildMessage(messages.InvalidFrontendApiErrorMessage, params));\n    },\n\n    throwInvalidProxyUrl(params: { url?: string }): never {\n      throw new Error(buildMessage(messages.InvalidProxyUrlErrorMessage, params));\n    },\n\n    throwMissingPublishableKeyError(): never {\n      throw new Error(buildMessage(messages.MissingPublishableKeyErrorMessage));\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}