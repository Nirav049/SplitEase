{"ast":null,"code":"import _objectWithoutProperties from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"fallback\"],\n  _excluded2 = [\"clerk\"],\n  _excluded3 = [\"clerk\"],\n  _excluded4 = [\"clerk\"];\nimport \"../chunk-3W5G4CYI.js\";\nimport React from \"react\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport { useIsomorphicClerkContext } from \"../contexts/IsomorphicClerkContext\";\nimport { useSessionContext } from \"../contexts/SessionContext\";\nimport { LoadedGuarantee } from \"../contexts/StructureContext\";\nimport { useAuth } from \"../hooks\";\nimport { withClerk } from \"./withClerk\";\nvar SignedIn = function SignedIn(_ref) {\n  var children = _ref.children;\n  var _useAuthContext = useAuthContext(),\n    userId = _useAuthContext.userId;\n  if (userId) {\n    return /* @__PURE__ */React.createElement(React.Fragment, null, children);\n  }\n  return null;\n};\nvar SignedOut = function SignedOut(_ref2) {\n  var children = _ref2.children;\n  var _useAuthContext2 = useAuthContext(),\n    userId = _useAuthContext2.userId;\n  if (userId === null) {\n    return /* @__PURE__ */React.createElement(React.Fragment, null, children);\n  }\n  return null;\n};\nvar ClerkLoaded = function ClerkLoaded(_ref3) {\n  var children = _ref3.children;\n  var isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(LoadedGuarantee, null, children);\n};\nvar ClerkLoading = function ClerkLoading(_ref4) {\n  var children = _ref4.children;\n  var isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children);\n};\nvar Protect = function Protect(_ref5) {\n  var children = _ref5.children,\n    fallback = _ref5.fallback,\n    restAuthorizedParams = _objectWithoutProperties(_ref5, _excluded);\n  var _useAuth = useAuth(),\n    isLoaded = _useAuth.isLoaded,\n    has = _useAuth.has,\n    userId = _useAuth.userId;\n  if (!isLoaded) {\n    return null;\n  }\n  var unauthorized = /* @__PURE__ */React.createElement(React.Fragment, null, fallback !== null && fallback !== void 0 ? fallback : null);\n  var authorized = /* @__PURE__ */React.createElement(React.Fragment, null, children);\n  if (!userId) {\n    return unauthorized;\n  }\n  if (typeof restAuthorizedParams.condition === \"function\") {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n  return authorized;\n};\nvar RedirectToSignIn = withClerk(function (_ref6) {\n  var clerk = _ref6.clerk,\n    props = _objectWithoutProperties(_ref6, _excluded2);\n  var client = clerk.client,\n    session = clerk.session;\n  var __unstable__environment = clerk.__unstable__environment;\n  var hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n  React.useEffect(function () {\n    if (session === null && hasActiveSessions && __unstable__environment) {\n      var afterSignOutOneUrl = __unstable__environment.displayConfig.afterSignOutOneUrl;\n      void clerk.navigate(afterSignOutOneUrl);\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n  return null;\n}, \"RedirectToSignIn\");\nvar RedirectToSignUp = withClerk(function (_ref7) {\n  var clerk = _ref7.clerk,\n    props = _objectWithoutProperties(_ref7, _excluded3);\n  React.useEffect(function () {\n    void clerk.redirectToSignUp(props);\n  }, []);\n  return null;\n}, \"RedirectToSignUp\");\nvar RedirectToUserProfile = withClerk(function (_ref8) {\n  var clerk = _ref8.clerk;\n  React.useEffect(function () {\n    clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, \"RedirectToUserProfile\");\nvar RedirectToOrganizationProfile = withClerk(function (_ref9) {\n  var clerk = _ref9.clerk;\n  React.useEffect(function () {\n    clerk.redirectToOrganizationProfile();\n  }, []);\n  return null;\n}, \"RedirectToOrganizationProfile\");\nvar RedirectToCreateOrganization = withClerk(function (_ref10) {\n  var clerk = _ref10.clerk;\n  React.useEffect(function () {\n    clerk.redirectToCreateOrganization();\n  }, []);\n  return null;\n}, \"RedirectToCreateOrganization\");\nvar AuthenticateWithRedirectCallback = withClerk(function (_ref11) {\n  var clerk = _ref11.clerk,\n    handleRedirectCallbackParams = _objectWithoutProperties(_ref11, _excluded4);\n  React.useEffect(function () {\n    void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n  }, []);\n  return null;\n}, \"AuthenticateWithRedirectCallback\");\nvar MultisessionAppSupport = function MultisessionAppSupport(_ref12) {\n  var children = _ref12.children;\n  var session = useSessionContext();\n  return /* @__PURE__ */React.createElement(React.Fragment, {\n    key: session ? session.id : \"no-users\"\n  }, children);\n};\nexport { AuthenticateWithRedirectCallback, ClerkLoaded, ClerkLoading, MultisessionAppSupport, Protect, RedirectToCreateOrganization, RedirectToOrganizationProfile, RedirectToSignIn, RedirectToSignUp, RedirectToUserProfile, SignedIn, SignedOut };","map":{"version":3,"mappings":"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","names":["React","useAuthContext","useIsomorphicClerkContext","useSessionContext","LoadedGuarantee","useAuth","withClerk","SignedIn","children","userId","SignedOut","ClerkLoaded","isomorphicClerk","loaded","ClerkLoading","Protect","fallback","restAuthorizedParams","isLoaded","has","unauthorized","authorized","condition","role","permission","RedirectToSignIn","clerk","props","client","session","__unstable__environment","hasActiveSessions","activeSessions","length","useEffect","afterSignOutOneUrl","displayConfig","navigate","redirectToSignIn","RedirectToSignUp","redirectToSignUp","RedirectToUserProfile","redirectToUserProfile","RedirectToOrganizationProfile","redirectToOrganizationProfile","RedirectToCreateOrganization","redirectToCreateOrganization","AuthenticateWithRedirectCallback","handleRedirectCallbackParams","handleRedirectCallback","MultisessionAppSupport","Fragment","key","id"],"sources":["D:\\split project\\expense-tracker_fullstack-master\\frontend\\node_modules\\@clerk\\clerk-react\\src\\components\\controlComponents.tsx"],"sourcesContent":["import type {\n  CheckAuthorizationWithCustomPermissions,\n  HandleOAuthCallbackParams,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useSessionContext } from '../contexts/SessionContext';\nimport { LoadedGuarantee } from '../contexts/StructureContext';\nimport { useAuth } from '../hooks';\nimport type { RedirectToSignInProps, RedirectToSignUpProps, WithClerkProp } from '../types';\nimport { withClerk } from './withClerk';\n\nexport const SignedIn = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const { userId } = useAuthContext();\n  if (userId) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const SignedOut = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const { userId } = useAuthContext();\n  if (userId === null) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const ClerkLoaded = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return <LoadedGuarantee>{children}</LoadedGuarantee>;\n};\n\nexport const ClerkLoading = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return <>{children}</>;\n};\n\ntype ProtectProps = React.PropsWithChildren<\n  (\n    | {\n        condition?: never;\n        role: OrganizationCustomRoleKey;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission: OrganizationCustomPermissionKey;\n      }\n    | {\n        condition: (has: CheckAuthorizationWithCustomPermissions) => boolean;\n        role?: never;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission?: never;\n      }\n  ) & {\n    fallback?: React.ReactNode;\n  }\n>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport const Protect = ({ children, fallback, ...restAuthorizedParams }: ProtectProps) => {\n  const { isLoaded, has, userId } = useAuth();\n\n  /**\n   * Avoid flickering children or fallback while clerk is loading sessionId or userId\n   */\n  if (!isLoaded) {\n    return null;\n  }\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = <>{fallback ?? null}</>;\n\n  const authorized = <>{children}</>;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n};\n\nexport const RedirectToSignIn = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignInProps>) => {\n  const { client, session } = clerk;\n  // TODO: Remove temp use of __unstable__environment\n  const { __unstable__environment } = clerk as any;\n\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n\n  React.useEffect(() => {\n    if (session === null && hasActiveSessions && __unstable__environment) {\n      const { afterSignOutOneUrl } = __unstable__environment.displayConfig;\n      void clerk.navigate(afterSignOutOneUrl);\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n\n  return null;\n}, 'RedirectToSignIn');\n\nexport const RedirectToSignUp = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignUpProps>) => {\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n\n  return null;\n}, 'RedirectToSignUp');\n\nexport const RedirectToUserProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToUserProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToUserProfile');\n\nexport const RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToOrganizationProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToOrganizationProfile');\n\nexport const RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    clerk.redirectToCreateOrganization();\n  }, []);\n\n  return null;\n}, 'RedirectToCreateOrganization');\n\nexport const AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }: WithClerkProp<HandleOAuthCallbackParams>) => {\n    React.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n\n    return null;\n  },\n  'AuthenticateWithRedirectCallback',\n);\n\nexport const MultisessionAppSupport = ({ children }: React.PropsWithChildren<unknown>): JSX.Element => {\n  const session = useSessionContext();\n  return <React.Fragment key={session ? session.id : 'no-users'}>{children}</React.Fragment>;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}