{"ast":null,"code":"import _regeneratorRuntime from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"D:/split project/expense-tracker_fullstack-master/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport React, { useEffect, useLayoutEffect, createContext, useContext, useMemo, useRef, createElement, useState, useCallback } from 'react';\n\n// Shared state between server components and client components\nvar noop = function noop() {};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nvar UNDEFINED = /*#__NOINLINE__*/noop();\nvar OBJECT = Object;\nvar isUndefined = function isUndefined(v) {\n  return v === UNDEFINED;\n};\nvar isFunction = function isFunction(v) {\n  return typeof v == 'function';\n};\nvar mergeObjects = function mergeObjects(a, b) {\n  return _objectSpread(_objectSpread({}, a), b);\n};\nvar isPromiseLike = function isPromiseLike(x) {\n  return isFunction(x.then);\n};\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nvar table = new WeakMap();\n// counter of the key\nvar counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nvar stableHash = function stableHash(arg) {\n  var type = typeof arg;\n  var constructor = arg && arg.constructor;\n  var isDate = constructor == Date;\n  var result;\n  var index;\n  if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {\n    // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n    // If it's already hashed, directly return the result.\n    result = table.get(arg);\n    if (result) return result;\n    // Store the hash first for circular reference detection before entering the\n    // recursive `stableHash` calls.\n    // For other objects like set and map, we use this id directly as the hash.\n    result = ++counter + '~';\n    table.set(arg, result);\n    if (constructor == Array) {\n      // Array.\n      result = '@';\n      for (index = 0; index < arg.length; index++) {\n        result += stableHash(arg[index]) + ',';\n      }\n      table.set(arg, result);\n    }\n    if (constructor == OBJECT) {\n      // Object, sort keys.\n      result = '#';\n      var keys = OBJECT.keys(arg).sort();\n      while (!isUndefined(index = keys.pop())) {\n        if (!isUndefined(arg[index])) {\n          result += index + ':' + stableHash(arg[index]) + ',';\n        }\n      }\n      table.set(arg, result);\n    }\n  } else {\n    result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n  }\n  return result;\n};\n\n// Global state used to deduplicate requests and store listeners\nvar SWRGlobalState = new WeakMap();\nvar EMPTY_CACHE = {};\nvar INITIAL_CACHE = {};\nvar STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nvar isWindowDefined = typeof window != STR_UNDEFINED;\nvar isDocumentDefined = typeof document != STR_UNDEFINED;\nvar hasRequestAnimationFrame = function hasRequestAnimationFrame() {\n  return isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\n};\nvar createCacheHelper = function createCacheHelper(cache, key) {\n  var state = SWRGlobalState.get(cache);\n  return [\n  // Getter\n  function () {\n    return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n  },\n  // Setter\n  function (info) {\n    if (!isUndefined(key)) {\n      var prev = cache.get(key);\n      // Before writing to the store, we keep the value in the initial cache\n      // if it's not there yet.\n      if (!(key in INITIAL_CACHE)) {\n        INITIAL_CACHE[key] = prev;\n      }\n      state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n    }\n  },\n  // Subscriber\n  state[6],\n  // Get server cache snapshot\n  function () {\n    if (!isUndefined(key)) {\n      // If the cache was updated on the client, we return the stored initial value.\n      if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n    }\n    // If we haven't done any client-side updates, we return the current value.\n    return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n  }];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */\nvar online = true;\nvar isOnline = function isOnline() {\n  return online;\n};\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nvar _ref = isWindowDefined && window.addEventListener ? [window.addEventListener.bind(window), window.removeEventListener.bind(window)] : [noop, noop],\n  _ref2 = _slicedToArray(_ref, 2),\n  onWindowEvent = _ref2[0],\n  offWindowEvent = _ref2[1];\nvar isVisible = function isVisible() {\n  var visibilityState = isDocumentDefined && document.visibilityState;\n  return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nvar initFocus = function initFocus(callback) {\n  // focus revalidate\n  if (isDocumentDefined) {\n    document.addEventListener('visibilitychange', callback);\n  }\n  onWindowEvent('focus', callback);\n  return function () {\n    if (isDocumentDefined) {\n      document.removeEventListener('visibilitychange', callback);\n    }\n    offWindowEvent('focus', callback);\n  };\n};\nvar initReconnect = function initReconnect(callback) {\n  // revalidate on reconnected\n  var onOnline = function onOnline() {\n    online = true;\n    callback();\n  };\n  // nothing to revalidate, just update the status\n  var onOffline = function onOffline() {\n    online = false;\n  };\n  onWindowEvent('online', onOnline);\n  onWindowEvent('offline', onOffline);\n  return function () {\n    offWindowEvent('online', onOnline);\n    offWindowEvent('offline', onOffline);\n  };\n};\nvar preset = {\n  isOnline: isOnline,\n  isVisible: isVisible\n};\nvar defaultConfigOptions = {\n  initFocus: initFocus,\n  initReconnect: initReconnect\n};\nvar IS_REACT_LEGACY = !React.useId;\nvar IS_SERVER = !isWindowDefined || 'Deno' in window;\n// Polyfill requestAnimationFrame\nvar rAF = function rAF(f) {\n  return hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n};\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nvar useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nvar navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nvar slowConnection = !IS_SERVER && navigatorConnection && (['slow-2g', '2g'].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\nvar serialize = function serialize(key) {\n  if (isFunction(key)) {\n    try {\n      key = key();\n    } catch (err) {\n      // dependencies not ready\n      key = '';\n    }\n  }\n  // Use the original key as the argument of fetcher. This can be a string or an\n  // array of values.\n  var args = key;\n  // If key is not falsy, or not an empty array, hash it.\n  key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n  return [key, args];\n};\n\n// Global timestamp.\nvar __timestamp = 0;\nvar getTimestamp = function getTimestamp() {\n  return ++__timestamp;\n};\nvar FOCUS_EVENT = 0;\nvar RECONNECT_EVENT = 1;\nvar MUTATE_EVENT = 2;\nvar ERROR_REVALIDATE_EVENT = 3;\nvar constants = {\n  __proto__: null,\n  ERROR_REVALIDATE_EVENT: ERROR_REVALIDATE_EVENT,\n  FOCUS_EVENT: FOCUS_EVENT,\n  MUTATE_EVENT: MUTATE_EVENT,\n  RECONNECT_EVENT: RECONNECT_EVENT\n};\nfunction internalMutate() {\n  return _internalMutate.apply(this, arguments);\n}\nfunction _internalMutate() {\n  _internalMutate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    var _len,\n      args,\n      _key2,\n      cache,\n      _key,\n      _data,\n      _opts,\n      options,\n      populateCache,\n      rollbackOnErrorOption,\n      optimisticData,\n      revalidate,\n      rollbackOnError,\n      throwOnError,\n      keyFilter,\n      matchedKeys,\n      it,\n      _iterator2,\n      _step2,\n      key,\n      mutateByKey,\n      _mutateByKey,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _mutateByKey = function _mutateByKey3() {\n            _mutateByKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_k) {\n              var _serialize5, _serialize6, key, _createCacheHelper, _createCacheHelper2, get, set, _SWRGlobalState$get5, _SWRGlobalState$get6, EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD, revalidators, startRevalidate, data, error, beforeMutationTs, hasOptimisticData, state, displayedData, currentData, committedData, res;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    // Serialize key\n                    _serialize5 = serialize(_k), _serialize6 = _slicedToArray(_serialize5, 1), key = _serialize6[0];\n                    if (key) {\n                      _context.next = 3;\n                      break;\n                    }\n                    return _context.abrupt(\"return\");\n                  case 3:\n                    _createCacheHelper = createCacheHelper(cache, key), _createCacheHelper2 = _slicedToArray(_createCacheHelper, 2), get = _createCacheHelper2[0], set = _createCacheHelper2[1];\n                    _SWRGlobalState$get5 = SWRGlobalState.get(cache), _SWRGlobalState$get6 = _slicedToArray(_SWRGlobalState$get5, 4), EVENT_REVALIDATORS = _SWRGlobalState$get6[0], MUTATION = _SWRGlobalState$get6[1], FETCH = _SWRGlobalState$get6[2], PRELOAD = _SWRGlobalState$get6[3];\n                    revalidators = EVENT_REVALIDATORS[key];\n                    startRevalidate = function startRevalidate() {\n                      if (revalidate) {\n                        // Invalidate the key by deleting the concurrent request markers so new\n                        // requests will not be deduped.\n                        delete FETCH[key];\n                        delete PRELOAD[key];\n                        if (revalidators && revalidators[0]) {\n                          return revalidators[0](MUTATE_EVENT).then(function () {\n                            return get().data;\n                          });\n                        }\n                      }\n                      return get().data;\n                    }; // If there is no new data provided, revalidate the key with current state.\n                    if (!(args.length < 3)) {\n                      _context.next = 9;\n                      break;\n                    }\n                    return _context.abrupt(\"return\", startRevalidate());\n                  case 9:\n                    data = _data;\n                    // Update global timestamps.\n                    beforeMutationTs = getTimestamp();\n                    MUTATION[key] = [beforeMutationTs, 0];\n                    hasOptimisticData = !isUndefined(optimisticData);\n                    state = get(); // `displayedData` is the current value on screen. It could be the optimistic value\n                    // that is going to be overridden by a `committedData`, or get reverted back.\n                    // `committedData` is the validated value that comes from a fetch or mutation.\n                    displayedData = state.data;\n                    currentData = state._c;\n                    committedData = isUndefined(currentData) ? displayedData : currentData; // Do optimistic data update.\n                    if (hasOptimisticData) {\n                      optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n                      // When we set optimistic data, backup the current committedData data in `_c`.\n                      set({\n                        data: optimisticData,\n                        _c: committedData\n                      });\n                    }\n                    if (isFunction(data)) {\n                      // `data` is a function, call it passing current cache value.\n                      try {\n                        data = data(committedData);\n                      } catch (err) {\n                        // If it throws an error synchronously, we shouldn't update the cache.\n                        error = err;\n                      }\n                    }\n                    // `data` is a promise/thenable, resolve the final data first.\n                    if (!(data && isPromiseLike(data))) {\n                      _context.next = 30;\n                      break;\n                    }\n                    _context.next = 22;\n                    return data.catch(function (err) {\n                      error = err;\n                    });\n                  case 22:\n                    data = _context.sent;\n                    if (!(beforeMutationTs !== MUTATION[key][0])) {\n                      _context.next = 29;\n                      break;\n                    }\n                    if (!error) {\n                      _context.next = 26;\n                      break;\n                    }\n                    throw error;\n                  case 26:\n                    return _context.abrupt(\"return\", data);\n                  case 29:\n                    if (error && hasOptimisticData && rollbackOnError(error)) {\n                      // Rollback. Always populate the cache in this case but without\n                      // transforming the data.\n                      populateCache = true;\n                      data = committedData;\n                      // Reset data to be the latest committed data, and clear the `_c` value.\n                      set({\n                        data: data,\n                        _c: UNDEFINED\n                      });\n                    }\n                  case 30:\n                    // If we should write back the cache after request.\n                    if (populateCache) {\n                      if (!error) {\n                        // Transform the result into data.\n                        if (isFunction(populateCache)) {\n                          data = populateCache(data, committedData);\n                        }\n                        // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                        set({\n                          data: data,\n                          error: UNDEFINED,\n                          _c: UNDEFINED\n                        });\n                      }\n                    }\n                    // Reset the timestamp to mark the mutation has ended.\n                    MUTATION[key][1] = getTimestamp();\n                    // Update existing SWR Hooks' internal states:\n                    _context.next = 34;\n                    return startRevalidate();\n                  case 34:\n                    res = _context.sent;\n                    // The mutation and revalidation are ended, we can clear it since the data is\n                    // not an optimistic value anymore.\n                    set({\n                      _c: UNDEFINED\n                    });\n                    // Throw error or return data\n                    if (!error) {\n                      _context.next = 40;\n                      break;\n                    }\n                    if (!throwOnError) {\n                      _context.next = 39;\n                      break;\n                    }\n                    throw error;\n                  case 39:\n                    return _context.abrupt(\"return\");\n                  case 40:\n                    return _context.abrupt(\"return\", populateCache ? res : data);\n                  case 41:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return _mutateByKey.apply(this, arguments);\n          };\n          mutateByKey = function _mutateByKey2(_x) {\n            return _mutateByKey.apply(this, arguments);\n          };\n          for (_len = _args2.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n            args[_key2] = _args2[_key2];\n          }\n          cache = args[0], _key = args[1], _data = args[2], _opts = args[3]; // When passing as a boolean, it's explicitly used to disable/enable\n          // revalidation.\n          options = mergeObjects({\n            populateCache: true,\n            throwOnError: true\n          }, typeof _opts === 'boolean' ? {\n            revalidate: _opts\n          } : _opts || {});\n          populateCache = options.populateCache;\n          rollbackOnErrorOption = options.rollbackOnError;\n          optimisticData = options.optimisticData;\n          revalidate = options.revalidate !== false;\n          rollbackOnError = function rollbackOnError(error) {\n            return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n          };\n          throwOnError = options.throwOnError; // If the second argument is a key filter, return the mutation results for all\n          // filtered keys.\n          if (!isFunction(_key)) {\n            _context2.next = 18;\n            break;\n          }\n          keyFilter = _key;\n          matchedKeys = [];\n          it = cache.keys();\n          _iterator2 = _createForOfIteratorHelper(it);\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              key = _step2.value;\n              if (\n              // Skip the special useSWRInfinite and useSWRSubscription keys.\n              !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          return _context2.abrupt(\"return\", Promise.all(matchedKeys.map(mutateByKey)));\n        case 18:\n          return _context2.abrupt(\"return\", mutateByKey(_key));\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _internalMutate.apply(this, arguments);\n}\nvar revalidateAllKeys = function revalidateAllKeys(revalidators, type) {\n  for (var key in revalidators) {\n    if (revalidators[key][0]) revalidators[key][0](type);\n  }\n};\nvar initCache = function initCache(provider, options) {\n  // The global state for a specific provider will be used to deduplicate\n  // requests and store listeners. As well as a mutate function that is bound to\n  // the cache.\n  // The provider's global state might be already initialized. Let's try to get the\n  // global state associated with the provider first.\n  if (!SWRGlobalState.has(provider)) {\n    var opts = mergeObjects(defaultConfigOptions, options);\n    // If there's no global state bound to the provider, create a new one with the\n    // new mutate function.\n    var EVENT_REVALIDATORS = {};\n    var _mutate = internalMutate.bind(UNDEFINED, provider);\n    var unmount = noop;\n    var subscriptions = {};\n    var subscribe = function subscribe(key, callback) {\n      var subs = subscriptions[key] || [];\n      subscriptions[key] = subs;\n      subs.push(callback);\n      return function () {\n        return subs.splice(subs.indexOf(callback), 1);\n      };\n    };\n    var setter = function setter(key, value, prev) {\n      provider.set(key, value);\n      var subs = subscriptions[key];\n      if (subs) {\n        var _iterator = _createForOfIteratorHelper(subs),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var fn = _step.value;\n            fn(value, prev);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    };\n    var initProvider = function initProvider() {\n      if (!SWRGlobalState.has(provider)) {\n        // Update the state if it's new, or if the provider has been extended.\n        SWRGlobalState.set(provider, [EVENT_REVALIDATORS, {}, {}, {}, _mutate, setter, subscribe]);\n        if (!IS_SERVER) {\n          // When listening to the native events for auto revalidations,\n          // we intentionally put a delay (setTimeout) here to make sure they are\n          // fired after immediate JavaScript executions, which can be\n          // React's state updates.\n          // This avoids some unnecessary revalidations such as\n          // https://github.com/vercel/swr/issues/1680.\n          var releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));\n          var releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));\n          unmount = function unmount() {\n            releaseFocus && releaseFocus();\n            releaseReconnect && releaseReconnect();\n            // When un-mounting, we need to remove the cache provider from the state\n            // storage too because it's a side-effect. Otherwise, when re-mounting we\n            // will not re-register those event listeners.\n            SWRGlobalState.delete(provider);\n          };\n        }\n      }\n    };\n    initProvider();\n    // This is a new provider, we need to initialize it and setup DOM events\n    // listeners for `focus` and `reconnect` actions.\n    // We might want to inject an extra layer on top of `provider` in the future,\n    // such as key serialization, auto GC, etc.\n    // For now, it's just a `Map` interface without any modifications.\n    return [provider, _mutate, initProvider, unmount];\n  }\n  return [provider, SWRGlobalState.get(provider)[4]];\n};\n\n// error retry\nvar onErrorRetry = function onErrorRetry(_, __, config, revalidate, opts) {\n  var maxRetryCount = config.errorRetryCount;\n  var currentRetryCount = opts.retryCount;\n  // Exponential backoff\n  var timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n  if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n    return;\n  }\n  setTimeout(revalidate, timeout, opts);\n};\nvar compare = function compare(currentData, newData) {\n  return stableHash(currentData) == stableHash(newData);\n};\n// Default cache provider\nvar _initCache = initCache(new Map()),\n  _initCache2 = _slicedToArray(_initCache, 2),\n  cache = _initCache2[0],\n  mutate = _initCache2[1];\n// Default config\nvar defaultConfig = mergeObjects({\n  // events\n  onLoadingSlow: noop,\n  onSuccess: noop,\n  onError: noop,\n  onErrorRetry: onErrorRetry,\n  onDiscarded: noop,\n  // switches\n  revalidateOnFocus: true,\n  revalidateOnReconnect: true,\n  revalidateIfStale: true,\n  shouldRetryOnError: true,\n  // timeouts\n  errorRetryInterval: slowConnection ? 10000 : 5000,\n  focusThrottleInterval: 5 * 1000,\n  dedupingInterval: 2 * 1000,\n  loadingTimeout: slowConnection ? 5000 : 3000,\n  // providers\n  compare: compare,\n  isPaused: function isPaused() {\n    return false;\n  },\n  cache: cache,\n  mutate: mutate,\n  fallback: {}\n},\n// use web preset by default\npreset);\nvar mergeConfigs = function mergeConfigs(a, b) {\n  // Need to create a new object to avoid mutating the original here.\n  var v = mergeObjects(a, b);\n  // If two configs are provided, merge their `use` and `fallback` options.\n  if (b) {\n    var u1 = a.use,\n      f1 = a.fallback;\n    var u2 = b.use,\n      f2 = b.fallback;\n    if (u1 && u2) {\n      v.use = u1.concat(u2);\n    }\n    if (f1 && f2) {\n      v.fallback = mergeObjects(f1, f2);\n    }\n  }\n  return v;\n};\nvar SWRConfigContext = createContext({});\nvar SWRConfig = function SWRConfig(props) {\n  var value = props.value;\n  var parentConfig = useContext(SWRConfigContext);\n  var isFunctionalConfig = isFunction(value);\n  var config = useMemo(function () {\n    return isFunctionalConfig ? value(parentConfig) : value;\n  }, [isFunctionalConfig, parentConfig, value]);\n  // Extend parent context values and middleware.\n  var extendedConfig = useMemo(function () {\n    return isFunctionalConfig ? config : mergeConfigs(parentConfig, config);\n  }, [isFunctionalConfig, parentConfig, config]);\n  // Should not use the inherited provider.\n  var provider = config && config.provider;\n  // initialize the cache only on first access.\n  var cacheContextRef = useRef(UNDEFINED);\n  if (provider && !cacheContextRef.current) {\n    cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n  }\n  var cacheContext = cacheContextRef.current;\n  // Override the cache if a new provider is given.\n  if (cacheContext) {\n    extendedConfig.cache = cacheContext[0];\n    extendedConfig.mutate = cacheContext[1];\n  }\n  // Unsubscribe events.\n  useIsomorphicLayoutEffect(function () {\n    if (cacheContext) {\n      cacheContext[2] && cacheContext[2]();\n      return cacheContext[3];\n    }\n  }, []);\n  return createElement(SWRConfigContext.Provider, mergeObjects(props, {\n    value: extendedConfig\n  }));\n};\n\n// @ts-expect-error\nvar enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nvar use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nvar setupDevTools = function setupDevTools() {\n  if (enableDevtools) {\n    // @ts-expect-error\n    window.__SWR_DEVTOOLS_REACT__ = React;\n  }\n};\nvar normalize = function normalize(args) {\n  return isFunction(args[1]) ? [args[0], args[1], args[2] || {}] : [args[0], null, (args[1] === null ? args[2] : args[1]) || {}];\n};\nvar useSWRConfig = function useSWRConfig() {\n  return mergeObjects(defaultConfig, useContext(SWRConfigContext));\n};\nvar preload = function preload(key_, fetcher) {\n  var _serialize = serialize(key_),\n    _serialize2 = _slicedToArray(_serialize, 2),\n    key = _serialize2[0],\n    fnArg = _serialize2[1];\n  var _SWRGlobalState$get = SWRGlobalState.get(cache),\n    _SWRGlobalState$get2 = _slicedToArray(_SWRGlobalState$get, 4),\n    PRELOAD = _SWRGlobalState$get2[3];\n  // Prevent preload to be called multiple times before used.\n  if (PRELOAD[key]) return PRELOAD[key];\n  var req = fetcher(fnArg);\n  PRELOAD[key] = req;\n  return req;\n};\nvar middleware = function middleware(useSWRNext) {\n  return function (key_, fetcher_, config) {\n    // fetcher might be a sync function, so this should not be an async function\n    var fetcher = fetcher_ && function () {\n      var _serialize3 = serialize(key_),\n        _serialize4 = _slicedToArray(_serialize3, 1),\n        key = _serialize4[0];\n      var _SWRGlobalState$get3 = SWRGlobalState.get(cache),\n        _SWRGlobalState$get4 = _slicedToArray(_SWRGlobalState$get3, 4),\n        PRELOAD = _SWRGlobalState$get4[3];\n      var req = PRELOAD[key];\n      if (isUndefined(req)) return fetcher_.apply(void 0, arguments);\n      delete PRELOAD[key];\n      return req;\n    };\n    return useSWRNext(key_, fetcher, config);\n  };\n};\nvar BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nvar withArgs = function withArgs(hook) {\n  return function useSWRArgs() {\n    // Get the default and inherited configuration.\n    var fallbackConfig = useSWRConfig();\n    // Normalize arguments.\n    for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    var _normalize = normalize(args),\n      _normalize2 = _slicedToArray(_normalize, 3),\n      key = _normalize2[0],\n      fn = _normalize2[1],\n      _config = _normalize2[2];\n    // Merge configurations.\n    var config = mergeConfigs(fallbackConfig, _config);\n    // Apply middleware\n    var next = hook;\n    var use = config.use;\n    var middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n    for (var i = middleware.length; i--;) {\n      next = middleware[i](next);\n    }\n    return next(key, fn || config.fetcher || null, config);\n  };\n};\n\n/**\n * An implementation of state with dependency-tracking.\n */\nvar useStateWithDeps = function useStateWithDeps(state) {\n  var rerender = useState({})[1];\n  var unmountedRef = useRef(false);\n  var stateRef = useRef(state);\n  // If a state property (data, error, or isValidating) is accessed by the render\n  // function, we mark the property as a dependency so if it is updated again\n  // in the future, we trigger a rerender.\n  // This is also known as dependency-tracking.\n  var stateDependenciesRef = useRef({\n    data: false,\n    error: false,\n    isValidating: false\n  });\n  /**\n  * @param payload To change stateRef, pass the values explicitly to setState:\n  * @example\n  * ```js\n  * setState({\n  *   isValidating: false\n  *   data: newData // set data to newData\n  *   error: undefined // set error to undefined\n  * })\n  *\n  * setState({\n  *   isValidating: false\n  *   data: undefined // set data to undefined\n  *   error: err // set error to err\n  * })\n  * ```\n  */\n  var setState = useCallback(function (payload) {\n    var shouldRerender = false;\n    var currentState = stateRef.current;\n    for (var _ in payload) {\n      var k = _;\n      // If the property has changed, update the state and mark rerender as\n      // needed.\n      if (currentState[k] !== payload[k]) {\n        currentState[k] = payload[k];\n        // If the property is accessed by the component, a rerender should be\n        // triggered.\n        if (stateDependenciesRef.current[k]) {\n          shouldRerender = true;\n        }\n      }\n    }\n    if (shouldRerender && !unmountedRef.current) {\n      if (IS_REACT_LEGACY) {\n        rerender({});\n      } else {\n        React.startTransition(function () {\n          return rerender({});\n        });\n      }\n    }\n  }, [rerender]);\n  useIsomorphicLayoutEffect(function () {\n    unmountedRef.current = false;\n    return function () {\n      unmountedRef.current = true;\n    };\n  });\n  return [stateRef, stateDependenciesRef.current, setState];\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nvar subscribeCallback = function subscribeCallback(key, callbacks, callback) {\n  var keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n  keyedRevalidators.push(callback);\n  return function () {\n    var index = keyedRevalidators.indexOf(callback);\n    if (index >= 0) {\n      // O(1): faster than splice\n      keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n      keyedRevalidators.pop();\n    }\n  };\n};\n\n// Create a custom hook with a middleware\nvar withMiddleware = function withMiddleware(useSWR, middleware) {\n  return function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key4 = 0; _key4 < _len3; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    var _normalize3 = normalize(args),\n      _normalize4 = _slicedToArray(_normalize3, 3),\n      key = _normalize4[0],\n      fn = _normalize4[1],\n      config = _normalize4[2];\n    var uses = (config.use || []).concat(middleware);\n    return useSWR(key, fn, _objectSpread(_objectSpread({}, config), {}, {\n      use: uses\n    }));\n  };\n};\nsetupDevTools();\nexport { IS_REACT_LEGACY, IS_SERVER, OBJECT, SWRConfig, SWRGlobalState, UNDEFINED, cache, compare, createCacheHelper, defaultConfig, defaultConfigOptions, getTimestamp, hasRequestAnimationFrame, initCache, internalMutate, isDocumentDefined, isFunction, isPromiseLike, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, mutate, noop, normalize, preload, preset, rAF, constants as revalidateEvents, serialize, slowConnection, stableHash, subscribeCallback, useIsomorphicLayoutEffect, useSWRConfig, useStateWithDeps, withArgs, withMiddleware };","map":{"version":3,"names":["React","useEffect","useLayoutEffect","createContext","useContext","useMemo","useRef","createElement","useState","useCallback","noop","UNDEFINED","OBJECT","Object","isUndefined","v","isFunction","mergeObjects","a","b","_objectSpread","isPromiseLike","x","then","table","WeakMap","counter","stableHash","arg","type","constructor","isDate","Date","result","index","RegExp","get","set","Array","length","keys","sort","pop","toJSON","toString","JSON","stringify","SWRGlobalState","EMPTY_CACHE","INITIAL_CACHE","STR_UNDEFINED","isWindowDefined","window","isDocumentDefined","document","hasRequestAnimationFrame","createCacheHelper","cache","key","state","info","prev","online","isOnline","_ref","addEventListener","bind","removeEventListener","_ref2","_slicedToArray","onWindowEvent","offWindowEvent","isVisible","visibilityState","initFocus","callback","initReconnect","onOnline","onOffline","preset","defaultConfigOptions","IS_REACT_LEGACY","useId","IS_SERVER","rAF","f","setTimeout","useIsomorphicLayoutEffect","navigatorConnection","navigator","connection","slowConnection","includes","effectiveType","saveData","serialize","err","args","isArray","__timestamp","getTimestamp","FOCUS_EVENT","RECONNECT_EVENT","MUTATE_EVENT","ERROR_REVALIDATE_EVENT","constants","__proto__","internalMutate","_internalMutate","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_len","_key2","_key","_data","_opts","options","populateCache","rollbackOnErrorOption","optimisticData","revalidate","rollbackOnError","throwOnError","keyFilter","matchedKeys","it","_iterator2","_step2","mutateByKey","_mutateByKey","_args2","wrap","_callee2$","_context2","next","_mutateByKey3","_callee","_k","_serialize5","_serialize6","_createCacheHelper","_createCacheHelper2","_SWRGlobalState$get5","_SWRGlobalState$get6","EVENT_REVALIDATORS","MUTATION","FETCH","PRELOAD","revalidators","startRevalidate","data","error","beforeMutationTs","hasOptimisticData","displayedData","currentData","committedData","res","_callee$","_context","abrupt","_c","catch","sent","stop","_mutateByKey2","_x","_createForOfIteratorHelper","s","n","done","value","test","push","e","Promise","all","map","revalidateAllKeys","initCache","provider","has","opts","mutate","unmount","subscriptions","subscribe","subs","splice","indexOf","setter","_iterator","_step","fn","initProvider","releaseFocus","releaseReconnect","delete","onErrorRetry","_","__","config","maxRetryCount","errorRetryCount","currentRetryCount","retryCount","timeout","Math","random","errorRetryInterval","compare","newData","_initCache","Map","_initCache2","defaultConfig","onLoadingSlow","onSuccess","onError","onDiscarded","revalidateOnFocus","revalidateOnReconnect","revalidateIfStale","shouldRetryOnError","focusThrottleInterval","dedupingInterval","loadingTimeout","isPaused","fallback","mergeConfigs","u1","use","f1","u2","f2","concat","SWRConfigContext","SWRConfig","props","parentConfig","isFunctionalConfig","extendedConfig","cacheContextRef","current","cacheContext","Provider","enableDevtools","__SWR_DEVTOOLS_USE__","setupDevTools","__SWR_DEVTOOLS_REACT__","normalize","useSWRConfig","preload","key_","fetcher","_serialize","_serialize2","fnArg","_SWRGlobalState$get","_SWRGlobalState$get2","req","middleware","useSWRNext","fetcher_","_serialize3","_serialize4","_SWRGlobalState$get3","_SWRGlobalState$get4","BUILT_IN_MIDDLEWARE","withArgs","hook","useSWRArgs","fallbackConfig","_len2","_key3","_normalize","_normalize2","_config","i","useStateWithDeps","rerender","unmountedRef","stateRef","stateDependenciesRef","isValidating","setState","payload","shouldRerender","currentState","k","startTransition","subscribeCallback","callbacks","keyedRevalidators","withMiddleware","useSWR","_len3","_key4","_normalize3","_normalize4","uses","revalidateEvents"],"sources":["D:/split project/expense-tracker_fullstack-master/frontend/node_modules/swr/_internal/dist/index.mjs"],"sourcesContent":["import React, { useEffect, useLayoutEffect, createContext, useContext, useMemo, useRef, createElement, useState, useCallback } from 'react';\n\n// Shared state between server components and client components\nconst noop = ()=>{};\n// Using noop() as the undefined value as undefined can be replaced\n// by something else. Prettier ignore and extra parentheses are necessary here\n// to ensure that tsc doesn't remove the __NOINLINE__ comment.\n// prettier-ignore\nconst UNDEFINED = /*#__NOINLINE__*/ noop();\nconst OBJECT = Object;\nconst isUndefined = (v)=>v === UNDEFINED;\nconst isFunction = (v)=>typeof v == 'function';\nconst mergeObjects = (a, b)=>({\n        ...a,\n        ...b\n    });\nconst isPromiseLike = (x)=>isFunction(x.then);\n\n// use WeakMap to store the object->key mapping\n// so the objects can be garbage collected.\n// WeakMap uses a hashtable under the hood, so the lookup\n// complexity is almost O(1).\nconst table = new WeakMap();\n// counter of the key\nlet counter = 0;\n// A stable hash implementation that supports:\n// - Fast and ensures unique hash properties\n// - Handles unserializable values\n// - Handles object key ordering\n// - Generates short results\n//\n// This is not a serialization function, and the result is not guaranteed to be\n// parsable.\nconst stableHash = (arg)=>{\n    const type = typeof arg;\n    const constructor = arg && arg.constructor;\n    const isDate = constructor == Date;\n    let result;\n    let index;\n    if (OBJECT(arg) === arg && !isDate && constructor != RegExp) {\n        // Object/function, not null/date/regexp. Use WeakMap to store the id first.\n        // If it's already hashed, directly return the result.\n        result = table.get(arg);\n        if (result) return result;\n        // Store the hash first for circular reference detection before entering the\n        // recursive `stableHash` calls.\n        // For other objects like set and map, we use this id directly as the hash.\n        result = ++counter + '~';\n        table.set(arg, result);\n        if (constructor == Array) {\n            // Array.\n            result = '@';\n            for(index = 0; index < arg.length; index++){\n                result += stableHash(arg[index]) + ',';\n            }\n            table.set(arg, result);\n        }\n        if (constructor == OBJECT) {\n            // Object, sort keys.\n            result = '#';\n            const keys = OBJECT.keys(arg).sort();\n            while(!isUndefined(index = keys.pop())){\n                if (!isUndefined(arg[index])) {\n                    result += index + ':' + stableHash(arg[index]) + ',';\n                }\n            }\n            table.set(arg, result);\n        }\n    } else {\n        result = isDate ? arg.toJSON() : type == 'symbol' ? arg.toString() : type == 'string' ? JSON.stringify(arg) : '' + arg;\n    }\n    return result;\n};\n\n// Global state used to deduplicate requests and store listeners\nconst SWRGlobalState = new WeakMap();\n\nconst EMPTY_CACHE = {};\nconst INITIAL_CACHE = {};\nconst STR_UNDEFINED = 'undefined';\n// NOTE: Use the function to guarantee it's re-evaluated between jsdom and node runtime for tests.\nconst isWindowDefined = typeof window != STR_UNDEFINED;\nconst isDocumentDefined = typeof document != STR_UNDEFINED;\nconst hasRequestAnimationFrame = ()=>isWindowDefined && typeof window['requestAnimationFrame'] != STR_UNDEFINED;\nconst createCacheHelper = (cache, key)=>{\n    const state = SWRGlobalState.get(cache);\n    return [\n        // Getter\n        ()=>!isUndefined(key) && cache.get(key) || EMPTY_CACHE,\n        // Setter\n        (info)=>{\n            if (!isUndefined(key)) {\n                const prev = cache.get(key);\n                // Before writing to the store, we keep the value in the initial cache\n                // if it's not there yet.\n                if (!(key in INITIAL_CACHE)) {\n                    INITIAL_CACHE[key] = prev;\n                }\n                state[5](key, mergeObjects(prev, info), prev || EMPTY_CACHE);\n            }\n        },\n        // Subscriber\n        state[6],\n        // Get server cache snapshot\n        ()=>{\n            if (!isUndefined(key)) {\n                // If the cache was updated on the client, we return the stored initial value.\n                if (key in INITIAL_CACHE) return INITIAL_CACHE[key];\n            }\n            // If we haven't done any client-side updates, we return the current value.\n            return !isUndefined(key) && cache.get(key) || EMPTY_CACHE;\n        }\n    ];\n} // export { UNDEFINED, OBJECT, isUndefined, isFunction, mergeObjects, isPromiseLike }\n;\n\n/**\n * Due to the bug https://bugs.chromium.org/p/chromium/issues/detail?id=678075,\n * it's not reliable to detect if the browser is currently online or offline\n * based on `navigator.onLine`.\n * As a workaround, we always assume it's online on the first load, and change\n * the status upon `online` or `offline` events.\n */ let online = true;\nconst isOnline = ()=>online;\n// For node and React Native, `add/removeEventListener` doesn't exist on window.\nconst [onWindowEvent, offWindowEvent] = isWindowDefined && window.addEventListener ? [\n    window.addEventListener.bind(window),\n    window.removeEventListener.bind(window)\n] : [\n    noop,\n    noop\n];\nconst isVisible = ()=>{\n    const visibilityState = isDocumentDefined && document.visibilityState;\n    return isUndefined(visibilityState) || visibilityState !== 'hidden';\n};\nconst initFocus = (callback)=>{\n    // focus revalidate\n    if (isDocumentDefined) {\n        document.addEventListener('visibilitychange', callback);\n    }\n    onWindowEvent('focus', callback);\n    return ()=>{\n        if (isDocumentDefined) {\n            document.removeEventListener('visibilitychange', callback);\n        }\n        offWindowEvent('focus', callback);\n    };\n};\nconst initReconnect = (callback)=>{\n    // revalidate on reconnected\n    const onOnline = ()=>{\n        online = true;\n        callback();\n    };\n    // nothing to revalidate, just update the status\n    const onOffline = ()=>{\n        online = false;\n    };\n    onWindowEvent('online', onOnline);\n    onWindowEvent('offline', onOffline);\n    return ()=>{\n        offWindowEvent('online', onOnline);\n        offWindowEvent('offline', onOffline);\n    };\n};\nconst preset = {\n    isOnline,\n    isVisible\n};\nconst defaultConfigOptions = {\n    initFocus,\n    initReconnect\n};\n\nconst IS_REACT_LEGACY = !React.useId;\nconst IS_SERVER = !isWindowDefined || 'Deno' in window;\n// Polyfill requestAnimationFrame\nconst rAF = (f)=>hasRequestAnimationFrame() ? window['requestAnimationFrame'](f) : setTimeout(f, 1);\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nconst useIsomorphicLayoutEffect = IS_SERVER ? useEffect : useLayoutEffect;\n// This assignment is to extend the Navigator type to use effectiveType.\nconst navigatorConnection = typeof navigator !== 'undefined' && navigator.connection;\n// Adjust the config based on slow connection status (<= 70Kbps).\nconst slowConnection = !IS_SERVER && navigatorConnection && ([\n    'slow-2g',\n    '2g'\n].includes(navigatorConnection.effectiveType) || navigatorConnection.saveData);\n\nconst serialize = (key)=>{\n    if (isFunction(key)) {\n        try {\n            key = key();\n        } catch (err) {\n            // dependencies not ready\n            key = '';\n        }\n    }\n    // Use the original key as the argument of fetcher. This can be a string or an\n    // array of values.\n    const args = key;\n    // If key is not falsy, or not an empty array, hash it.\n    key = typeof key == 'string' ? key : (Array.isArray(key) ? key.length : key) ? stableHash(key) : '';\n    return [\n        key,\n        args\n    ];\n};\n\n// Global timestamp.\nlet __timestamp = 0;\nconst getTimestamp = ()=>++__timestamp;\n\nconst FOCUS_EVENT = 0;\nconst RECONNECT_EVENT = 1;\nconst MUTATE_EVENT = 2;\nconst ERROR_REVALIDATE_EVENT = 3;\n\nvar constants = {\n  __proto__: null,\n  ERROR_REVALIDATE_EVENT: ERROR_REVALIDATE_EVENT,\n  FOCUS_EVENT: FOCUS_EVENT,\n  MUTATE_EVENT: MUTATE_EVENT,\n  RECONNECT_EVENT: RECONNECT_EVENT\n};\n\nasync function internalMutate(...args) {\n    const [cache, _key, _data, _opts] = args;\n    // When passing as a boolean, it's explicitly used to disable/enable\n    // revalidation.\n    const options = mergeObjects({\n        populateCache: true,\n        throwOnError: true\n    }, typeof _opts === 'boolean' ? {\n        revalidate: _opts\n    } : _opts || {});\n    let populateCache = options.populateCache;\n    const rollbackOnErrorOption = options.rollbackOnError;\n    let optimisticData = options.optimisticData;\n    const revalidate = options.revalidate !== false;\n    const rollbackOnError = (error)=>{\n        return typeof rollbackOnErrorOption === 'function' ? rollbackOnErrorOption(error) : rollbackOnErrorOption !== false;\n    };\n    const throwOnError = options.throwOnError;\n    // If the second argument is a key filter, return the mutation results for all\n    // filtered keys.\n    if (isFunction(_key)) {\n        const keyFilter = _key;\n        const matchedKeys = [];\n        const it = cache.keys();\n        for (const key of it){\n            if (// Skip the special useSWRInfinite and useSWRSubscription keys.\n            !/^\\$(inf|sub)\\$/.test(key) && keyFilter(cache.get(key)._k)) {\n                matchedKeys.push(key);\n            }\n        }\n        return Promise.all(matchedKeys.map(mutateByKey));\n    }\n    return mutateByKey(_key);\n    async function mutateByKey(_k) {\n        // Serialize key\n        const [key] = serialize(_k);\n        if (!key) return;\n        const [get, set] = createCacheHelper(cache, key);\n        const [EVENT_REVALIDATORS, MUTATION, FETCH, PRELOAD] = SWRGlobalState.get(cache);\n        const revalidators = EVENT_REVALIDATORS[key];\n        const startRevalidate = ()=>{\n            if (revalidate) {\n                // Invalidate the key by deleting the concurrent request markers so new\n                // requests will not be deduped.\n                delete FETCH[key];\n                delete PRELOAD[key];\n                if (revalidators && revalidators[0]) {\n                    return revalidators[0](MUTATE_EVENT).then(()=>get().data);\n                }\n            }\n            return get().data;\n        };\n        // If there is no new data provided, revalidate the key with current state.\n        if (args.length < 3) {\n            // Revalidate and broadcast state.\n            return startRevalidate();\n        }\n        let data = _data;\n        let error;\n        // Update global timestamps.\n        const beforeMutationTs = getTimestamp();\n        MUTATION[key] = [\n            beforeMutationTs,\n            0\n        ];\n        const hasOptimisticData = !isUndefined(optimisticData);\n        const state = get();\n        // `displayedData` is the current value on screen. It could be the optimistic value\n        // that is going to be overridden by a `committedData`, or get reverted back.\n        // `committedData` is the validated value that comes from a fetch or mutation.\n        const displayedData = state.data;\n        const currentData = state._c;\n        const committedData = isUndefined(currentData) ? displayedData : currentData;\n        // Do optimistic data update.\n        if (hasOptimisticData) {\n            optimisticData = isFunction(optimisticData) ? optimisticData(committedData, displayedData) : optimisticData;\n            // When we set optimistic data, backup the current committedData data in `_c`.\n            set({\n                data: optimisticData,\n                _c: committedData\n            });\n        }\n        if (isFunction(data)) {\n            // `data` is a function, call it passing current cache value.\n            try {\n                data = data(committedData);\n            } catch (err) {\n                // If it throws an error synchronously, we shouldn't update the cache.\n                error = err;\n            }\n        }\n        // `data` is a promise/thenable, resolve the final data first.\n        if (data && isPromiseLike(data)) {\n            // This means that the mutation is async, we need to check timestamps to\n            // avoid race conditions.\n            data = await data.catch((err)=>{\n                error = err;\n            });\n            // Check if other mutations have occurred since we've started this mutation.\n            // If there's a race we don't update cache or broadcast the change,\n            // just return the data.\n            if (beforeMutationTs !== MUTATION[key][0]) {\n                if (error) throw error;\n                return data;\n            } else if (error && hasOptimisticData && rollbackOnError(error)) {\n                // Rollback. Always populate the cache in this case but without\n                // transforming the data.\n                populateCache = true;\n                data = committedData;\n                // Reset data to be the latest committed data, and clear the `_c` value.\n                set({\n                    data,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // If we should write back the cache after request.\n        if (populateCache) {\n            if (!error) {\n                // Transform the result into data.\n                if (isFunction(populateCache)) {\n                    data = populateCache(data, committedData);\n                }\n                // Only update cached data and reset the error if there's no error. Data can be `undefined` here.\n                set({\n                    data,\n                    error: UNDEFINED,\n                    _c: UNDEFINED\n                });\n            }\n        }\n        // Reset the timestamp to mark the mutation has ended.\n        MUTATION[key][1] = getTimestamp();\n        // Update existing SWR Hooks' internal states:\n        const res = await startRevalidate();\n        // The mutation and revalidation are ended, we can clear it since the data is\n        // not an optimistic value anymore.\n        set({\n            _c: UNDEFINED\n        });\n        // Throw error or return data\n        if (error) {\n            if (throwOnError) throw error;\n            return;\n        }\n        return populateCache ? res : data;\n    }\n}\n\nconst revalidateAllKeys = (revalidators, type)=>{\n    for(const key in revalidators){\n        if (revalidators[key][0]) revalidators[key][0](type);\n    }\n};\nconst initCache = (provider, options)=>{\n    // The global state for a specific provider will be used to deduplicate\n    // requests and store listeners. As well as a mutate function that is bound to\n    // the cache.\n    // The provider's global state might be already initialized. Let's try to get the\n    // global state associated with the provider first.\n    if (!SWRGlobalState.has(provider)) {\n        const opts = mergeObjects(defaultConfigOptions, options);\n        // If there's no global state bound to the provider, create a new one with the\n        // new mutate function.\n        const EVENT_REVALIDATORS = {};\n        const mutate = internalMutate.bind(UNDEFINED, provider);\n        let unmount = noop;\n        const subscriptions = {};\n        const subscribe = (key, callback)=>{\n            const subs = subscriptions[key] || [];\n            subscriptions[key] = subs;\n            subs.push(callback);\n            return ()=>subs.splice(subs.indexOf(callback), 1);\n        };\n        const setter = (key, value, prev)=>{\n            provider.set(key, value);\n            const subs = subscriptions[key];\n            if (subs) {\n                for (const fn of subs){\n                    fn(value, prev);\n                }\n            }\n        };\n        const initProvider = ()=>{\n            if (!SWRGlobalState.has(provider)) {\n                // Update the state if it's new, or if the provider has been extended.\n                SWRGlobalState.set(provider, [\n                    EVENT_REVALIDATORS,\n                    {},\n                    {},\n                    {},\n                    mutate,\n                    setter,\n                    subscribe\n                ]);\n                if (!IS_SERVER) {\n                    // When listening to the native events for auto revalidations,\n                    // we intentionally put a delay (setTimeout) here to make sure they are\n                    // fired after immediate JavaScript executions, which can be\n                    // React's state updates.\n                    // This avoids some unnecessary revalidations such as\n                    // https://github.com/vercel/swr/issues/1680.\n                    const releaseFocus = opts.initFocus(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, FOCUS_EVENT)));\n                    const releaseReconnect = opts.initReconnect(setTimeout.bind(UNDEFINED, revalidateAllKeys.bind(UNDEFINED, EVENT_REVALIDATORS, RECONNECT_EVENT)));\n                    unmount = ()=>{\n                        releaseFocus && releaseFocus();\n                        releaseReconnect && releaseReconnect();\n                        // When un-mounting, we need to remove the cache provider from the state\n                        // storage too because it's a side-effect. Otherwise, when re-mounting we\n                        // will not re-register those event listeners.\n                        SWRGlobalState.delete(provider);\n                    };\n                }\n            }\n        };\n        initProvider();\n        // This is a new provider, we need to initialize it and setup DOM events\n        // listeners for `focus` and `reconnect` actions.\n        // We might want to inject an extra layer on top of `provider` in the future,\n        // such as key serialization, auto GC, etc.\n        // For now, it's just a `Map` interface without any modifications.\n        return [\n            provider,\n            mutate,\n            initProvider,\n            unmount\n        ];\n    }\n    return [\n        provider,\n        SWRGlobalState.get(provider)[4]\n    ];\n};\n\n// error retry\nconst onErrorRetry = (_, __, config, revalidate, opts)=>{\n    const maxRetryCount = config.errorRetryCount;\n    const currentRetryCount = opts.retryCount;\n    // Exponential backoff\n    const timeout = ~~((Math.random() + 0.5) * (1 << (currentRetryCount < 8 ? currentRetryCount : 8))) * config.errorRetryInterval;\n    if (!isUndefined(maxRetryCount) && currentRetryCount > maxRetryCount) {\n        return;\n    }\n    setTimeout(revalidate, timeout, opts);\n};\nconst compare = (currentData, newData)=>stableHash(currentData) == stableHash(newData);\n// Default cache provider\nconst [cache, mutate] = initCache(new Map());\n// Default config\nconst defaultConfig = mergeObjects({\n    // events\n    onLoadingSlow: noop,\n    onSuccess: noop,\n    onError: noop,\n    onErrorRetry,\n    onDiscarded: noop,\n    // switches\n    revalidateOnFocus: true,\n    revalidateOnReconnect: true,\n    revalidateIfStale: true,\n    shouldRetryOnError: true,\n    // timeouts\n    errorRetryInterval: slowConnection ? 10000 : 5000,\n    focusThrottleInterval: 5 * 1000,\n    dedupingInterval: 2 * 1000,\n    loadingTimeout: slowConnection ? 5000 : 3000,\n    // providers\n    compare,\n    isPaused: ()=>false,\n    cache,\n    mutate,\n    fallback: {}\n}, // use web preset by default\npreset);\n\nconst mergeConfigs = (a, b)=>{\n    // Need to create a new object to avoid mutating the original here.\n    const v = mergeObjects(a, b);\n    // If two configs are provided, merge their `use` and `fallback` options.\n    if (b) {\n        const { use: u1 , fallback: f1  } = a;\n        const { use: u2 , fallback: f2  } = b;\n        if (u1 && u2) {\n            v.use = u1.concat(u2);\n        }\n        if (f1 && f2) {\n            v.fallback = mergeObjects(f1, f2);\n        }\n    }\n    return v;\n};\n\nconst SWRConfigContext = createContext({});\nconst SWRConfig = (props)=>{\n    const { value  } = props;\n    const parentConfig = useContext(SWRConfigContext);\n    const isFunctionalConfig = isFunction(value);\n    const config = useMemo(()=>isFunctionalConfig ? value(parentConfig) : value, [\n        isFunctionalConfig,\n        parentConfig,\n        value\n    ]);\n    // Extend parent context values and middleware.\n    const extendedConfig = useMemo(()=>isFunctionalConfig ? config : mergeConfigs(parentConfig, config), [\n        isFunctionalConfig,\n        parentConfig,\n        config\n    ]);\n    // Should not use the inherited provider.\n    const provider = config && config.provider;\n    // initialize the cache only on first access.\n    const cacheContextRef = useRef(UNDEFINED);\n    if (provider && !cacheContextRef.current) {\n        cacheContextRef.current = initCache(provider(extendedConfig.cache || cache), config);\n    }\n    const cacheContext = cacheContextRef.current;\n    // Override the cache if a new provider is given.\n    if (cacheContext) {\n        extendedConfig.cache = cacheContext[0];\n        extendedConfig.mutate = cacheContext[1];\n    }\n    // Unsubscribe events.\n    useIsomorphicLayoutEffect(()=>{\n        if (cacheContext) {\n            cacheContext[2] && cacheContext[2]();\n            return cacheContext[3];\n        }\n    }, []);\n    return createElement(SWRConfigContext.Provider, mergeObjects(props, {\n        value: extendedConfig\n    }));\n};\n\n// @ts-expect-error\nconst enableDevtools = isWindowDefined && window.__SWR_DEVTOOLS_USE__;\nconst use = enableDevtools ? window.__SWR_DEVTOOLS_USE__ : [];\nconst setupDevTools = ()=>{\n    if (enableDevtools) {\n        // @ts-expect-error\n        window.__SWR_DEVTOOLS_REACT__ = React;\n    }\n};\n\nconst normalize = (args)=>{\n    return isFunction(args[1]) ? [\n        args[0],\n        args[1],\n        args[2] || {}\n    ] : [\n        args[0],\n        null,\n        (args[1] === null ? args[2] : args[1]) || {}\n    ];\n};\n\nconst useSWRConfig = ()=>{\n    return mergeObjects(defaultConfig, useContext(SWRConfigContext));\n};\n\nconst preload = (key_, fetcher)=>{\n    const [key, fnArg] = serialize(key_);\n    const [, , , PRELOAD] = SWRGlobalState.get(cache);\n    // Prevent preload to be called multiple times before used.\n    if (PRELOAD[key]) return PRELOAD[key];\n    const req = fetcher(fnArg);\n    PRELOAD[key] = req;\n    return req;\n};\nconst middleware = (useSWRNext)=>(key_, fetcher_, config)=>{\n        // fetcher might be a sync function, so this should not be an async function\n        const fetcher = fetcher_ && ((...args)=>{\n            const [key] = serialize(key_);\n            const [, , , PRELOAD] = SWRGlobalState.get(cache);\n            const req = PRELOAD[key];\n            if (isUndefined(req)) return fetcher_(...args);\n            delete PRELOAD[key];\n            return req;\n        });\n        return useSWRNext(key_, fetcher, config);\n    };\n\nconst BUILT_IN_MIDDLEWARE = use.concat(middleware);\n\n// It's tricky to pass generic types as parameters, so we just directly override\n// the types here.\nconst withArgs = (hook)=>{\n    return function useSWRArgs(...args) {\n        // Get the default and inherited configuration.\n        const fallbackConfig = useSWRConfig();\n        // Normalize arguments.\n        const [key, fn, _config] = normalize(args);\n        // Merge configurations.\n        const config = mergeConfigs(fallbackConfig, _config);\n        // Apply middleware\n        let next = hook;\n        const { use  } = config;\n        const middleware = (use || []).concat(BUILT_IN_MIDDLEWARE);\n        for(let i = middleware.length; i--;){\n            next = middleware[i](next);\n        }\n        return next(key, fn || config.fetcher || null, config);\n    };\n};\n\n/**\n * An implementation of state with dependency-tracking.\n */ const useStateWithDeps = (state)=>{\n    const rerender = useState({})[1];\n    const unmountedRef = useRef(false);\n    const stateRef = useRef(state);\n    // If a state property (data, error, or isValidating) is accessed by the render\n    // function, we mark the property as a dependency so if it is updated again\n    // in the future, we trigger a rerender.\n    // This is also known as dependency-tracking.\n    const stateDependenciesRef = useRef({\n        data: false,\n        error: false,\n        isValidating: false\n    });\n    /**\n   * @param payload To change stateRef, pass the values explicitly to setState:\n   * @example\n   * ```js\n   * setState({\n   *   isValidating: false\n   *   data: newData // set data to newData\n   *   error: undefined // set error to undefined\n   * })\n   *\n   * setState({\n   *   isValidating: false\n   *   data: undefined // set data to undefined\n   *   error: err // set error to err\n   * })\n   * ```\n   */ const setState = useCallback((payload)=>{\n        let shouldRerender = false;\n        const currentState = stateRef.current;\n        for(const _ in payload){\n            const k = _;\n            // If the property has changed, update the state and mark rerender as\n            // needed.\n            if (currentState[k] !== payload[k]) {\n                currentState[k] = payload[k];\n                // If the property is accessed by the component, a rerender should be\n                // triggered.\n                if (stateDependenciesRef.current[k]) {\n                    shouldRerender = true;\n                }\n            }\n        }\n        if (shouldRerender && !unmountedRef.current) {\n            if (IS_REACT_LEGACY) {\n                rerender({});\n            } else {\n                React.startTransition(()=>rerender({}));\n            }\n        }\n    }, [\n        rerender\n    ]);\n    useIsomorphicLayoutEffect(()=>{\n        unmountedRef.current = false;\n        return ()=>{\n            unmountedRef.current = true;\n        };\n    });\n    return [\n        stateRef,\n        stateDependenciesRef.current,\n        setState\n    ];\n};\n\n// Add a callback function to a list of keyed callback functions and return\n// the unsubscribe function.\nconst subscribeCallback = (key, callbacks, callback)=>{\n    const keyedRevalidators = callbacks[key] || (callbacks[key] = []);\n    keyedRevalidators.push(callback);\n    return ()=>{\n        const index = keyedRevalidators.indexOf(callback);\n        if (index >= 0) {\n            // O(1): faster than splice\n            keyedRevalidators[index] = keyedRevalidators[keyedRevalidators.length - 1];\n            keyedRevalidators.pop();\n        }\n    };\n};\n\n// Create a custom hook with a middleware\nconst withMiddleware = (useSWR, middleware)=>{\n    return (...args)=>{\n        const [key, fn, config] = normalize(args);\n        const uses = (config.use || []).concat(middleware);\n        return useSWR(key, fn, {\n            ...config,\n            use: uses\n        });\n    };\n};\n\nsetupDevTools();\n\nexport { IS_REACT_LEGACY, IS_SERVER, OBJECT, SWRConfig, SWRGlobalState, UNDEFINED, cache, compare, createCacheHelper, defaultConfig, defaultConfigOptions, getTimestamp, hasRequestAnimationFrame, initCache, internalMutate, isDocumentDefined, isFunction, isPromiseLike, isUndefined, isWindowDefined, mergeConfigs, mergeObjects, mutate, noop, normalize, preload, preset, rAF, constants as revalidateEvents, serialize, slowConnection, stableHash, subscribeCallback, useIsomorphicLayoutEffect, useSWRConfig, useStateWithDeps, withArgs, withMiddleware };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}